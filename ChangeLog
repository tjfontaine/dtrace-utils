2013-07-19  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/Pcontrol.h (ps_prochandle_t.awaiting_pending_stops):
	New, true when libproc has halted a process, before it has waited
	for it.
	* libproc/Pcontrol.c (Pwait_internal): If waiting for a pending
	stop with no pending_stops outstanding, and this Pwait() is
	blocking, convert it to nonblocking.  If we are not runnable,
	never do a blocking Pwait().
	(Ptrace): If the process is dead, don't bother trying to stop it.
	Maintain awaiting_pending_stops.  Keep waiting for the SIGSTOP to
	be received until either we have no pending stops left or the
	process is no longer runnable.

	* libproc/rtld.db (rd_ldso_consistent_begin): Do nothing if
	already halted, whether at a breakpoint or not.
	(rd_ldso_nonzero_lmid_consistent_begin): Likewise.  If the
	child dies while we are waiting for a consistent state,
	note it rather than trying to wait for it.
	(rd_loadobj_iter): Do not try to run over a dead process.
	* libdtrace/dt_proc.c (dt_proc_attach): Ditch useless debugging.
	(dt_proc_control): Do not whine about PS_TRACESTOPped processes
	if we have just done a proxy Pwait() for just that.

2013-07-18  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Avoid catching options with names containing other
	options during option extraction.  Strip trailing spaces from
	option values.  Add @@trigger-timing.

	* test/unittest/dtrace-util/tst.evaltime.r: Fix evaltime results.
	* test/unittest/dtrace-util/tst.evaltime32.r: Likewise.

	* Makefunctions (cc-template): Depend on provider headers.
	(dof-template): Depend on all relevant object files.

2013-07-17  Nick Alcock  <nick.alcock@oracle.com>

	First-pointer-argument fetching code, and associated ISA-dependent
	runtime switching.

	* libproc/Pcontrol.h (ps_prochandle_t.elf_machine): New field, the
	ELF architecture header value.
	* libproc/elfish.c (process_elf64): Rename to...
	(Pread_isa_info): ... this, initializing the new field. Also
	initialize P->elf64 explicitlyra ther than depending on the caller
	to do it.
	* libproc/Pcontrol.c (Pcreate): Adjust accordingly.
	(Pgrab): Likewise.
	(Pwait_internal): Likewise, adding comment explaining the lack of
	error handling.
	(Pdynamically_linked): New function.
	* libproc/isadep.c: New, ISA-selection dispatcher conditionalizing
	off elf64 and elf_machine, and one dispatched function:
	Pread_first_arg.
	* libproc/isadep_impl.h: New, prototypes for ISA-dependent
	functions called by isadep.c.
	* libproc/isadep_x86.c: New, all underlying ISA-dependent
	functions that can be called on x86-compatible systems.
	* libproc/libproc.h: Adjust.

	Improved evaltime=main support.

	* libdtrace/dt_proc.c (dt_attach_time_t): New enum, second
	parameter to...
	(dt_proc_attach): ... this, which is also reformulated to use a
	switch and to handle the additional case of a breakpoint on
	__libc_start_main() and getting main() addresses via
	Pread_first_arg().  Improve comments around the dpr_stop /
	dt_prcmode changes.
	(dt_main_fail_rendezvous): Split out of...
	(dt_break_drop_main): ... this, which is renamed to...
	(dt_break_prepare_drop_main): ... this, and tries to drop a
	breakpoint on __libc_start_main first.
	(dt_break_libc_start_main): New, try to drop a breakpoint
	on main() using the Pread_first_arg() code in dt_proc_attach().
	(dt_proc_control): Adjust dt_proc_attach() call.
	* test/unittest/dtrace-util/tst.evaltime.sh: Adjust, testing
	static stripped and unstripped binaries, and not bothering to test
	unstripped dynamically linked binaries.  Emit output only in END,
	to avoid racing with the trigger's output.  Fix wrong copyright
	date.
	* test/unittest/dtrace-util/tst.evaltime32.sh: New, test 32-bit
	binaries (XFAIL because syscall:: isn't working for the compat
	table yet).
	* test/triggers/visible-constructor-unstripped.c: Removed.
	* test/triggers/visible-constructor-static.c: New.
	* test/triggers/visible-constructor-static-unstripped.c: Likewise.
	* test/triggers/visible-constructor-32.c: Likewise.
	* test/triggers/Build: Adjust accordingly.  No longer bother to
	-Bdynamic up anything but the unstripped static test.

	Miscellaneous bugfixes.

	* libproc/Psymtab.c (Pxlookup_by_name_internal): Assign to result
	if last result was undef, as well as if there was none.
	* libproc/elfish_64.c (r_debug): Demote some stderr fprintfs to
	debugging output.
	* libproc/Pcontrol.h (ps_prochandle_t.no_dyn): Fix comment.
	* libdtrace/dt_options.c (dt_opt_debug_assert): Fix comparison.
	* libdtrace/dt_proc.c (dt_proc_control): Get rtld_db handle
	only after catering for the dead-process case.
	* dtrace-utils.spec (BuildRequires): Add glibc-static.
	* libdtrace/dt_open.c (dt_vopen): Set the default evaltime to
	postinit.

2013-07-15  Nick Alcock  <nick.alcock@oracle.com>

	* Makefunctions (hdr-template): Depend on the DTrace binary.
	(dof-template): Likewise.
	(cc-dependencies): Use .deps for depfiles.
	* GNUmakefile: Likewise.

2013-06-28  Nick Alcock  <nick.alcock@oracle.com>

	* test/demo/act/ustack-size.*: New test, ustack() with a size
	argument.

	* libproc/Pcontrol.c (Pwait_internal): Immediately return if
	stopped at a breakpoint.
	(Puntrace): Reset ptrace_halted before calling Pwait() (which may
	recurse back into Ptrace()).
	(bkpt_handle_start): Set bkpt_halted before calling the handler;
	unset it if the handler returns PS_RUN.
	* libproc/rtld_db.c (rd_ldso_consistent_begin): Do nothing if
	already halted at a breakpoint: if inconsistent, return EDEADLK.
	(rd_ldso_nonzero_lmid_consistent_begin): Likewise.
	(rd_ldso_consistent_end): Note that calls from inside a breakpoint
	handler do nothing.
	(rd_start_trap): Trip a rd_event callback if turned on when the
	start trap is hit.

	* libdtrace/dt_proc.c (dt_proc_rdagent): Split out the dlactivity
	code into..
	(dt_proc_scan): ... this new function.
	(dt_break_drop_main): Call it here.
	(dt_break_interesting): Likewise.

	(dt_proc_resume): Line-wrapping.
	(dt_proc_stop): Format string bug in debugging statement.
	(dt_proc_dpr_lock): Remove some stray debugging.
	(dt_proc_dpr_unlock): Likewise.

	* test/demo/act/ustack.d: Print only two ustack()s.
	* test/demo/act/ustack.r: Adjust.

2013-06-20  Nick Alcock  <nick.alcock@oracle.com>

	Waitfd support.

	* Makeconfig: Test for waitfd().
	* libport/waitfd.c: New syscall wrapper when !HAVE_WAITFD.
	* include/port.h: Prototype it when !HAVE_WAITFD.
	* libport/Build: Adjust.

	Wrappable ptrace() / Pwait() / Ptrace() locking.

	* libproc/wrap.c: New file, implement the default ptrace() and
	Pwait() wrappers and wrapper setting functions.
	* libproc/Pcontrol.h (ps_prochandle_t.ptrace_wrap): New,
	pointer to the ptrace() wrapper for this process.
	(ps_prochandle_t.pwait_wrap): Likewise for the Pwait() wrapper.
	(wrap_arg): Argument for the wrappers.
	Poison ptrace() everywhere other than wrap.c.
	(wrapped_ptrace): Add new prototype.
	* libproc/Pcontrol.c (ptrace_lock_hook): New variable, global
	locking function called around Ptrace()/Puntrace() calls.
	(Pset_ptrace_lock_hook): New, set it.
	(Pcreate): Set the ptrace() and Pwait() wrappers (to NULL)
	and hook argument (from a new parameter). Wrap ptrace() calls.
	Call the ptrace_lock_hook() appropriately.
	(Pgrab): Likewise.
	(Pwait): Rename to...
	(Pwait_internal): ... this.  Pwait() is now a wrapper, in wrap.c.
	Wrap ptrace() calls.
	(Puntrace): Wrap ptrace() calls.  Call the ptrace_lock_hook().
	(bkpt_ip): Likewise.
	(add_bkpt): Likewise.
	(Punbkpt): Likewise.
	(bkpt_handle): Likewise.
	(Pbkpt_continue): Likewise.
	(Pbkpt_continue_internal): Likewise.
	(bkpt_handle_post_singlestep): Likewise.
	(Ptrace): Likewise.  Rejig to not misbehave on failed grabs.
	* Psymtab.c (Pbuild_file_symtab): Wrap ptrace() call.
	* libproc.h: Add wrapper types and new public functions.  Adjust
	Pgrab() and Pcreate() prototypes.
	* libdtrace/dt_proc.c (dt_proc_control): Adjust Pgrab() and
	Pcreate() calls.
	* test/triggers/libproc-pldd.c (main): Likewise.
	* test/triggers/libproc-consistency.c (main): Likewise.
	* test/triggers/libproc-lookup-by-name.c (main): Likewise.

	Mutex debugging.

	* libdtrace/dt_impl.h (_dtrace_debug_assert): New variable, the
	set of active debug assertions.
	(DT_DEBUG_MUTEXES): The only such assertion so far.
	* libdtrace/dt_options.c (dt_opt_debug_assert): Set it...
	(_dtrace_ctoptions): ... and here.
	* libdtrace/dt_debug.c: Define it.
	* runtest.sh: Set it, via the environment variable method.
	* libdtrace/dt_proc.c (dt_proc_create): Use error-checking
	mutexes if DT_DEBUG_MUTEXES. Fix leak on error path.
	(dt_proc_grab): Likewise.

	libproc operation proxying.

	* libdtrace/dt_proc.h: Improve comments. Fix prototypes.
	(dt_proc_t.dpr_lock_holder): New, holder of dpr_lock when...
	(dt_proc_t.dpr_lock_count): ... this is nonzero.
	(dt_proc_t.dpr_msg_cv): Condition variable used for proxy
	communication.
	(dt_proc_t.dpr_proxy_fd): fds used for proxy communication.
	(dt_proc_t.dpr_fd): Waitfd for process.
	(dt_proc_t.dpr_proxy_rq): Proxy request ID.
	(dt_proc_t.dpr_proxy_ret): Proxy return value.
	(dt_proc_t.dpr_proxy_errno): Proxy errno.
	(dt_proc_t.dpr_proxy_args): Proxy arguments.
	* libdtrace/dt_proc.c: Improve comments.
	(proxy_pwait): New, proxy Pwait() to the control thread, unless
	called from the control thread.
	(proxy_ptrace): Likewise, for ptrace().
	(dt_proc_control_data_t.dpcd_proxy_fd): Proxy pipe fd.
	(dt_proc_control): Revamp main control loop using waitfds.
	Detect and handle incoming proxy requests.
	(dt_proc_control_cleanup): Close the proxy pipe and waitfd, if
	opened.
	(dt_proc_create_thread): Open the proxy pipe.  Set the ptrace()
	lock hook...
	(dt_proc_ptrace_lock): ... to this new function.
	(dt_proc_create): Create the proxy condition variable.  When
	DTRACE_PROC_WAITING, automatically dt_proc_continue().
	(dt_proc_grab): Likewise.
	(dt_proc_lock): Re-express in terms of...
	(dt_proc_dpr_lock): ... this, making a recursive mutex out of a
	nonrecursive one.
	(dt_proc_unlock): Likewise, in terms of...
	(dt_proc_dpr_unlock): ... this.
	(dtrace_proc_create): Adjust to include flags argument.
	(dtrace_proc_grab): Likewise.
	* libdtrace/dtrace.h (DT_PROC_WAITING): Define.
	Adjust prototypes.
	* cmd/dtrace.c (main): Adjust accordingly (no flags).
	* libdtrace/dt_aggregate.c (dt_aggregate_usym): Likewise, passing
	in DTRACE_PROC_WAITING.
	(dt_aggregate_umod): Likewise.
	* libdtrace/dt_consume.c (dt_print_ustack): Likewise.
	(dt_print_usym): Likewise.
	(dt_print_umod): Likewise.
	* libdtrace/dt_pid.c (dt_pid_create_probes): Likewise.  Drop
	writable grabs comment: we no longer have the concept of grab
	writability.
	* libdtrace/dt_subr.c (dtrace_uaddr2str): Likewise.

	* libproc/Pcontrol.c (Pwait_internal): Return a long.
	* libproc/wrap.c (default_pwait_wrapper): Likewise.
	(Pwait): Likewise.
	* libproc/libproc.h: Adjust prototypes.

	Two-phase continue.

	* libdtrace/dt_proc.h (dt_proc_t.dpr_tid_locked): Remove.
	(dt_proc_t.dpr_cond_waiting): New.
	(DT_PROC_STOP_RESUMING): New, thread needs to resume.
	(DT_PROC_STOP_RESUMED): Thread has resumed.
	* libdtrace/dt_proc.c (dt_proc_stop): Stash the lock count aroud
	the condvar wait.  Note that we are in a condvar wait, so that on
	cancellation we do not need to take out the lock again.  Go into
	DT_PROC_STOP_RESUMING state afterwards.
	(dt_proc_resume): New, if DT_PROC_STOP_RESUMING, broadcast to
	resume the main thread, and go to DT_PROC_STOP_RESUMED.
	(dt_break_interesting): Use dt_proc_resume() after dt_proc_stop().
	Don't take the lock out, we are always called under it.
	(dt_break_drop_main): Likewise.
	(dt_proc_rdevent): Likewise.
	(dt_proc_control): Call dt_proc_resume() after the Puntrace(),
	and on process death.
	(dt_proc_control_cleanup): Only take out the lock if we are not
	already recorded as the owner and we were not cancelled during a
	condwait (in which case we are the owner but not recorded as
	such).  Release the process even if we don't take out the lock.
	Reset the lock count all the way to zero as we unlock.
	(dt_proc_create_thread): Set the dpr_lock_holder to ourself
	after the condwait.
	(dt_proc_continue): A continue when resumed does nothing. A
	continue when not resumed waits for resumption after the
	broadcast.

	Process termination cleanup.

	* libdtrace/dt_proc.h (dt_prox_hash.dph_destroy_lock): Remove.
	* libproc/Pcontrol.h (ps_prochandle_t.released): New.
	Add prototypes.
	* libproc/Pcontrol.c (Pfree): Rename to...
	(Pfree_internal): ... this.
	(Pfree): New, free storage used by already-released process.
	(Pcreate): Puntrace() at appropriate times. Call Pfree_internal(),
	not Pfree().
	(Pgrab): Likewise.
	(Prelease): Do nothing if already released.  Don't free storage,
	just deallocate other OS resources.
	* libproc/Psymtab.c (Psym_free): Don't free the rd_agent here...
	(Psym_release): ... but in this new function, called from
	Prelease().
	* test/triggers/libproc-consistency.c: Call Pfree().
	* test/triggers/libproc-lookup-by-name.c: Likewise.
	* test/triggers/libproc-pldd.c: Likewise.
	* libdtrace/dt_proc.c (dt_proc_control): Don't blank out
	the dpr_proc, remove from the lrulist or dph hash,
	or free the prochandle.
	(dt_proc_destroy): Do it here instead.  Also clean up all the
	mutexes, but do not free the dt_proc itself.  Use
	dt_proc_dpr_lock().
	(dt_proc_create_thread): Free the proc on error.
	(dt_proc_grab): Destroy the dpr_msg_cv on error.
	(dt_proc_release): If the process is dead, destroy it, don't
	just retire it.
	(dt_proc_hash_create): No more dph_destroy_lock.
	(dt_proc_hash_destroy): Likewise.  Fix the broken list iteration.
	Free the dpr ourselves, after using it to iterate to the next
	member in the list.
	* libdtrace/dt_work.c (dtrace_sleep): Translate a PS_DEAD process
	into a NULL one for the process handler (which has no access to
	the Pstate() function).

	Drop RD_PREINIT / RD_POSTINIT.

	* include/rtld_db.h (rd_event_e): Drop them.
	* libdtrace/dt_proc.c (dt_proc_rdevent): Likewise.

	ustack() testcase fixes.

	* test/demo/act/ustack.d: Don't exit right after the ustack().
	* test/triggers/Build: Pass in --export-dynamic to the linker, not
	-Bdynamic to the compiler.  Don't use sibcalls or inlines.
	* test/triggers/readwholedir.c (main): Wait for dtrace for a bit.
	(is_regular_test_file): Make non-static.
	(rw_files): Likewise.
	* test/demo/act/ustack.r: Expected results.
	* test/demo/act/ustack.r.p: Keep only relatively unchanging parts
	of the stack trace.

	Miscellaneous.

	* runtest.sh: Wait for a second for coredumps to make it to disk.
	* libproc/Psymtab.c (Pbuild_file_symtab): Fix Ptrace()/Puntrace()
	imbalance.  If PTRACE_GETMAPFD doesn't work, say why.
	* libproc/Pcontrol.h (exec_handler_fun): Make it clearer that this
	is a function pointer.
	(ps_prochandle_t.exec_handler): Likewise.
	(set_exec_handler): Likewise.
	* libproc/Pcontrol.c (set_exec_handler): Likewise.
	(Pgrab): Prohibit self-grabs.
	(bkpt_flush): Suppress breakpoint traps during breakpoint flushing.
	(Punbkpt): Detect removal of nonexistent breakpoints in the right
	place.
	* libproc/rtld_db.c (rd_event_enable): Turn on the rd_monitoring
	flag when rtld activity monitoring is turned on.
	(rd_ldso_nonzero_lmid_consistent_begin): Consistently use 0/1
	for the last argument of Ptrace(), not TRUE/FALSE.
	* libdtrace/dt_pid.c (dt_pid_create_usdt_probes): Don't
	Pupdate_maps().
	* test/triggers/pid-tst-gcc.c (go): Don't use a NULL argv
	or spam stdout.
	* test/unittest/pointers/tst.basic2.d: Fix typo.
	* test/unittest/profile-n/tst.func.sh: Use /bin/date, not
	/usr/bin/date.
	* test/unittest/profile-n/tst.mod.sh: Likewise.
	* test/unittest/profile-n/tst.sym.sh: Likewise.

2013-06-04  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build (DRTI_OBJ): Always build -fPIC.

2013-06-03  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_program.c (dtrace_program_header): Emit missing
	#include.

2013-05-22  Nick Alcock  <nick.alcock@oracle.com>

	Breakpoint notifiers.

	* libproc/libproc.h (Pbkpt_notifier): New prototype.
	* libproc/Pcontrol.h (bkpt_handler_t.notifier_list): New, this is
	sometimes now kept in a list.
	(bkpt_t.bkpt_notifiers): The list (of notifiers).
	* libproc/Pcontrol.c (Pbkpt): Rename to...
	(add_bkpt): ... this, and add is_notifier argument and optional
	addition to the notifier list.
	(Pbkpt): Re-express as wrapper around add_bkpt.
	(Pbkpt_notifier): New function, wrapper around add_bkpt.
	(Punbkpt): Refactor out cleanup calls and bkpt freeing into...
	(delete_bkpt_handler): ... this new function.  Add notifier
	cleanup calls and freeing.
	(bkpt_flush): Use it rather than open-coding the cleanup.
	(bkpt_handle_start): Call the notifiers, if any.  Don't call the
	handler if there is none.
	(bkpt_handle_post_singlestep): Likewise, for post-singlestep
	breakpoints.

	* libproc/rtld_db.c (rd_start_trap): Now a notifier, returning void.
	(rd_exec_handler): Add it with Pbkpt_notifier(), not Pbkpt().
	(rd_new): Likewise.

	Post-handler breakpoint removal.

	* libproc/Pcontrol.h (bkpt_t.in_handler): New, true if this handler
	is executing now.
	(bkpt_t.pending_removal): New, true if Punbkpt() was called while
	in-handler.
	* libproc/Pcontrol.c (Punbkpt): Set pending_removal iff
	in_handler, rather than unhashing or removing the breakpoint.
	(bkpt_handle_start): Set in_handler around handler calls.  Call
	Punbkpt() afterwards iff pending_removal.
	(bkpt_handle_post_singlestep): Likewise.

	evaltime={preinit,postinit,main} implementation.

	* libproc/Pcontrol.h (Pgetauxval): Move this prototype...
	* libproc/libproc.h: ... to here.
	(rt_proc_t.dpr_rtld): Remove, unused.
	* libdtrace/dt_proc.c (dt_proc_bpmain): Rename to...
	(dt_break_interesting): ... this, and fix the prototype to the
	style of our breakpoint handlers.  Take out the dpr lock before
	calling dt_proc_stop().  Remove the breakpoint after a single
	firing.  Use the dt_prcmode, not DT_PROC_STOP_MAIN.
	(dt_break_drop_main): New, called on ELF entry point to attach a
	breakpoint to main().
	(dt_proc_rdagent): New, from dt_proc_attach.
	(dt_proc_attach): Use it.  Can now fail (iff a necessary
	breakpoint cannot be dropped).  No longer takes exec argument:
	takes before_continue instead.  Largely rewritten.
	(dt_proc_control): Change dt_proc_attach() call to conform to new
	prototype.  Call dt_proc_rdagent() on every pass.  Comment
	improvements.
	(dt_proc_create): Pass in the dt_prcmode when creating the thread,
	not unconditional DT_PROC_STOP_CREATE.

	* test/triggers/visible-constructor.c: New test, print something
	in a constructor and in main().
	* test/triggers/visible-constructor-unstripped.c: New symlink to
	visible-constructor.c.
	* test/triggers/Build (EXTERNAL_TRIGGERS): New tests.
	(visible-constructor-unstripped_LDFLAGS): Include a symbol table.
	(visible-constructor_LDFLAGS): Always strip, no symbol table.
	* test/unittest/dtrace-util/tst.ProcInvoke.sh: Call repeatedly
	with every valid value of evaltime, including the default.
	* test/unittest/dtrace-util/tst.ProcInvoke.r: Adjust (taking into
	account the extra blank line after every dtrace invocation).
	* test/unittest/dtrace-util/tst.evaltime.sh: New test...
	* test/unittest/dtrace-util/tst.evaltime.r: ... and results.

	Miscellaneous.

	* libproc/Pcontrol.c (add_bkpt): Remove spurious return.
	* libproc/Psymtab.c (Pupdate_symsearch): Do not crash if rtld_db
	is not initialized.
	(sym_search_next): Use a symbol scope search when there are
	symbols, not when there aren't.  Fix off-by-one bug.
	(map_iter): Don't bother trying to look up the address of mappings
	with no dynamic section.
	* cmd/dtrace.c (fatal): Close the DTrace handle.
	* libdtrace/dt_open.c (dtrace_close): Do nothing on
	dtrace_close(NULL), like free().
	* libdtrace/dt_proc.c (dt_proc_rdevent): Add a missing process
	lock.
	(dt_proc_control): Don't dt_free() ourself.
	* test/internals/libproc/tst.plddGrab*.sh: Disown before killing.

2013-05-20  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/Psymtab.c (Prd_agent): Update lmids to initialize the
	agent.
	* libproc/Pcontrol.c (Pwait): Check 64-bitness on every exec().

2013-04-29  Nick Alcock  <nick.alcock@oracle.com>

	Move libproc tests into a separate testsuite.

	* test/unittest/libproc/*: Move to...
	* test/internals/libproc/*: ... here.
	* test/triggers/Build (TRIGGERS): Newly compose from...
	(EXTERNAL_TRIGGERS): These, run by 'make check-installed'...
	(INTERNAL_TRIGGERS): ... and these, which are not.
	(trigger-template): No longer add to TRIGGERS (it was redundant
	anyway).
	* runtest.sh: Include 'internals' in default testsuites.
	* Makerules (external-triggers): New target, running over
	EXTERNAL_TRIGGERS.
	(PHONIES): Adjust.
	* Makecheck: Depend on `external-triggers' in installed tests:
	include internal testsuite in other tests.

	* test/triggers/Build: Add rpath to victim processes.

	Bugfixes.

	* libproc/Psymtab.c (Pxlookup_by_name_internal): Do not look at
	executable mappings if mappings cannot be determined.
	(Pobject_iter): Likewise.

	* dt_options.c (dt_opt_runtime): Do not assume that strtoull() can
	produce negative output.
	(dt_optval_parse): Likewise.
	(dt_opt_rate): Likewise.

	Header split.

	* uts/Build (HEADERS_INSTALL): Split into...
	(SYS_HEADERS_INSTALL): ... this, for installs into include/sys/...
	(LINUX_HEADERS_INSTALL): ... and this, for installs into include/linux.
	Install dtrace_cpu_defines.h into linux/; do not install dtrace_ioctl.h
	at all.
	(install): Adjust accordingly.

	* uts/common/sys/dtrace.h: Delete almost all content, reducing to
	#includes of userspace-side types header and two headers provided
	by the dtrace module.
	* uts/common/sys/dtrace_ioctl.h: Delete, now provided by the
	dtrace module.
	* uts/common/sys/dtrace_types.h: Provide dtrace_id_t, not in the
	shared headers.  Drop some unused stuff.
	* libdtrace/dtrace.h (dtrace_probespec_t): This is purely
	userspace: migrated from uts/common/sys/dtrace.h.

	* libdtrace/dt_open.c (dt_vopen): Do an ioctl size dump.
	(dtrace_size_dbg_print): New, dump ioctl sizes under DTRACE_DEBUG.

	* dtrace-utils.spec (Requires): Add dtrace-modules-headers.
	(BuildRequires): Likewise.
	(devel/Group): Add.
	(%install): Remove 'echo rm -rf'.
	(%files devel): Don't hardwire a mode, the installed mode is OK.
	(%files): Likewise.  No longer install dtrace_ioctl.h: install
	dtrace_cpu_defines.h instead.

	* INCOMPATIBILITIES: ptrace() differences no longer apply.

2013-04-25  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Log skips in the summary file.

2013-04-10  Nick Alcock  <nick.alcock@oracle.com>

	* test/triggers/.gitignore: Do not ignore *.h.
	* test/triggers/libproc-lookup*.[ch]: New test of name lookup.

	* test/utils/Build: Look for headers in the right place.  Link
	against libdtrace.so only.

2013-04-09  Nick Alcock	 <nick.alcock@oracle.com>

	* libproc/Pcontrol.c (Ptrace): Do not trigger a SIGSTOP if we are
	already in SIGSTOPped state.

	Symbol lookup scope support in rtld_db.

	* include/i386/platform.h (DT_THISPROCNUM): Define.
	* include/rtld_db.h (rd_loadobj_t.rl_scope). New, pointers to
	search scopes in victim.
	(rd_loadobj_t.rl_nscopes): New, number of scopes.
	(rd_loadobj_t.rl_default_scope): New, 1 if this scope is a
	clone of the lmid's default.
	(rd_loadobj_t.rl_nscopes_alloced): New, number of scopes allocated
	in rl_nscopes (some of which may be unused or stale).
	(rd_get_scope): New prototype.

	* include/sys/glibc_internal_link.h (r_scope_elem): New, a search
	scope element in the dynamic linker.
	(internal_link_map): New, the glibc link map structure with
	private elements up to l_searchlist.
	* libproc/mkoffsets.sh: Add internal_link_map (header only, no
	offset array support since that is not useful for things which
	are only defined in glibc_internal_link.h).
	* libproc/rtld_db.c (link_map): Rename to...
	(first_link_map): ... this better name.
	(rd_get_link_map): New, get a link map given an
	address. Refactored from...
	(rd_loadobj_iter): ... here.
	(rd_get_loadobj_link_map): New, populate loadobj given link map
	and address, expanding the scopes array only as necessary.
	(rd_get_scope): New, use these new functions, populating lmident
	ourself (always the same as the loadobj we are looking in).
	(rd_loadobj_iter): Likewise.  Track the first scope in each
	lmid and substitute it into all libs in that lmid which have
	no scopes of their own.

	* test/triggers/libproc-pldd.c: Print out the symbol search
	scopes.
	* test/unittest/libproc/test.pldd*.r: Adjust accordingly.

	Name lookups along symbol lookup scopes.

	* libproc/Pcontrol.h (file_info_t): Describe lifetime rules.
	(file_info_t.file_symsearch): New element, symbol search path.
	(file_info_t.file_nsymsearch): Length of that path.

	* libproc/Psymtab.c (map_iter): Copy the rl_scope in our copy of
	the received rd_loadobj_t, to avoid its being overwritten.  Free
	that copy on every subsequent invocation for a given library.
	(file_info_del): Free the copy on file_info deletion.
	(mapping_purge): Also free it on mapping purge.
	(Pupdate_symsearch): Populate it, if possible.
	(sym_search_iter_t): State for the symbol search iterator.
	(sym_search_next): New, symbol search iterator following
	search paths.
	(Pxlookup_by_name_internal): Use it rather than counting.  Global
	searches no longer iterate over the whole list, but over the
	executable's symbol search path. Call Pupdate_symsearch() when
	doing global searches.

	Minor ustack()-related fixes.

	* test/demo/act/ustack.d: Try a ustack() on readwholedir.
	* test/triggers/Build: readwholedir needs a symbol table.
	* test/triggers/readwholedir: don't die before being
	stack-traced.

2013-03-26  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace-utils.spec (Requires): Ask for 32-bit dependencies
	correctly.

2013-03-20  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_debug.c: New file, ring-buffer-based signal-to-dump
	debugging machinery.
	* libdtrace/dt_debug.h: Header for it.
	* libdtrace/Build: Add it, and reflow libdtrace-build_SOURCES.

	* libdtrace/dt_open.c (_dtrace_rdvers): Remove, unused.
	(dtrace_close): Flush the ring buffer.
	(_dtrace_init): rd_init() no longer exists: do not use it. Move to
	dt_debug.c, and rename to _dtrace_debug_init.
	* libdtrace/dt_subr.c (dt_dprintf): Move to dt_debug.c, and
	reimplement in terms of new lower-level dt_debug_printf().
	* libdtrace/dt_impl.h: Inlude dt_debug.h.  Move debugging prototypes
	there.

	* libproc/libproc.h (_libproc_debug): Remove.
	* libproc/Pcontrol.c (_libproc_debug): Likewise.
	(_libproc_init): Likewise.
	(_dprintf): Reimplement in terms of dt_debug_printf().
	(Prelease): Flush the ring buffer.

	* libdtrace/dtrace.h (dtrace_debug_set_dump_sig): New public
	interface.
	* libdtrace/libdtrace.ver: Add it.
	* INCOMPATIBILITIES: Mention it.

	* test/triggers/libproc-dlmadopen.c: Do not dlmopen() unless
	MANY_LMIDS is set.
	* test/triggers/libproc-consistency.c: Expect fewer
	dlopen()/dlclose() calls when MANY_LMIDS is set.  Do not use
	nonzero lmids as a trigger to suppress log output if MANY_LMIDS is
	not set.
	* test/unittest/libproc/tst.lmid-consistency.sh: New test,
	testing nonzero lmid link map consistency, setting MANY_LMIDS.
	test/unittest/libproc/tst.consistency.sh: Unset LD_AUDIT to be
	reasonably sure that glibc does not spontaneously create nonzero
	lmids for us.

2013-03-15  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/Psymtab.c (map_iter): Allow a null string.
	(debug_dump_symtab): New, dump a symbol table.
	(debug_dump_status): New, dump the status of a process.
	(Pupdate_syms): Add a missing update_lmids() call.
	(sym_by_addr): Quash warnings and a potential use of
	uninitialized data.
	(sym_by_name): Note if a null symbol is found.
	(Pbuild_file_symtab): Fix faulty recursion if a breakpoint handler
	looks up a name.

	(Pxlookup_by_name): Rename to...
	(Pxlookup_by_name_internal): ... this, adding fixup_load_addr
	parameter.
	(Pxlookup_by_name): New wrapper.
	(Pbuild_file_symtab): Call it to compute the file_dyn_base of
	ld.so.

	* libproc/Pcontrol.h (ps_prochandle_t.ptrace_halted): New, set
	when the process was halted via Ptrace() rather than a breakpoint.
	* libproc/Pcontrol.c (Pcreate): Set it.
	(Ptrace): Likewise.
	(Puntrace): Likewise.
	(Punbkpt): Use it to determine whether to resume on breakpoint
	removal.

	* libproc/Pcontrol.h (ps_prochandle_t.bkpt_consume): New
	(ps_prochandle_t.singlestepped): Remove.
	* libproc/Pcontrol.c (bkpt_handle_singlestep): Rename to...
	(bkpt_handle_post_singlestep): ... this.  Remove 'singlestepped'.
	(Pbkpt_continue_internal): Pass in the singlestepping state.
	Adjust for renaming.
	(bkpt_ip): New, split from...
	(Pwait): ... here, with added optional ignoring of -ESRCH.  Reset
	new state variables on exec().  Do not call breakpoint handlers
	when bkpt_consume is set.
	(Punbkpt): Remove 'singlestepped'.
	(bkpt_flush): Likewise.
	(bkpt_handle_start): Likewise. Adjust for renaming: always ask
	Pbkpt_continue_internal() to singlestep.
	(bkpt_handle): Adjust for renaming.
	(Pbkpt_continue): Determine need for singlestep by inspection of
	IP address.  Consume pending SIGTRAPs if singlestepping is not
	needed.  Simply consume process state changes (and fire handlers)
	if the process is still running.

	* libproc/Pcontrol.h (ps_prochandle_t.pending_stops): New, counts
	sent-but-unconsumed SIGSTOPs.
	(ps_prochandle_t.pending_pre_exec): New, number of SIGSTOPs sent
	before exec() and not consumed yet.
	* libproc/Pcontrol.c (Pwait): Handle SIGSTOP in the right place.
	Maintain pending_stops and pending_pre_exec on SIGSTOP receipt
	and detected exec(), resuming appropriately.
	(Ptrace): Increase pending_stops whenever a SIGSTOP is sent.

	* libproc/Pcontrol.c (Pwait): Repeatedly self-invoke to drain all
	outstanding state changes.
	(Pread_scalar): Fix indentation.

	* include/rtld_db.h (rl_iter_f): Add num parameter.
	* libproc/Psymtab.c (map_iter): Use it to distinguish the executable
	from the vdso.
	* libproc/elfish_64.c: Improve comment.

	* include/sys/glibc_internal_link.h: Revise completely: we are now
	pulling data out of _rtld_global, not private parts of the link
	map.
	* libproc/mkoffsets.sh: Adjust accordingly.
	* libproc/Pcontrol.h: Adjust includes.
	(rd_agent_t.maps_ready): New, false if maps are not ready yet.
	(rd_agent_t.rtld_global_addr): New, address of _rtld_global in the
	child.
	(rd_agent_t.exec_detected): New, 1 if an exec() has been seen.
	(rd_agent_t.exec_jmp): Location to longjmp() to on exec(), if
	non-NULL.
	(rd_agent_t.stop_on_consistent): New, if 1, stop on RD_CONSISTENT
	state rather than !RD_CONSISTENT state.
	(rd_agent_t.lmid_halted): If nonzero, rd_ldso_nonzero_lmid_consistent_begin()
	halted the process.
	(rd_agent_t.lmid_halt_prev_state): State before that halt, for
	Puntrace().
	(rd_agent_t.lmid_bkpted): If nonzero, r_l_n_l_c_b() breakpointed
	the process.
	(rd_agent_t.lmid_incompatible_glibc): Nonzero if this glibc
	appears to be incompatible with our offsets.
	* libproc/rtld_db.c (sane_nanosleep): New, nanosleep() taking a
	useful argument.
	(dl_nns): New, returns number of active namespaces, or 1 if static
	or glibc is incompatible.
	(rtld_global): New, returns address of _rtld_global in child.
	(ns_debug_addr): New, returns address of ns_debug for a given
	namespace in child.
	(link_map): New, returns address of link map for a given namespace
	in child.
	(ns_nloaded): New, returns number of items in link map for a given
	namespace.
	(load_lock): New, returns the address of the lock protecting
	dlopen()/dlclose() in child.
	(rd_ldso_consistency): Now recursive.  lmid of -1 means to scan
	all lmids and return the least consistent state.
	(rd_ldso_consistent_begin): Set stop_on_consistent when needed.
	Scan the base lmid for consistency.  Do a nonblocking Pwait()
	before our first consistency-checking loop.  Fail if the process
	is dead.
	(rd_ldso_nonzero_lmid_consistent_begin): New, ensure that
	link maps for lmid != 0 are consistent...
	(rd_ldso_nonzero_lmid_consistent_end): ... and its new
	counterpart.
	(rd_brk_trap): Adjust for rd_ldso_consistency() changes.  Respect
	rd->stop_on_consistent.
	(r_brk): Handle an r_debug_addr of zero ("not yet initialized").
	(rd_new): Look up rtld_global (if child is dynamically linked).
	(rd_start_trap): Likewise.  Only look up r_brk() if we have an
	address for r_debug.  Note that the maps are ready.
	(rd_exec_handler): Reset all our new state on exec().  Note that
	exec_detected.  Jup to the exec_jmp handler, if it was set.
	(rd_event_enable): Do nothing unless the maps are ready.
	(rd_loadobj_iter): Likewise.  Trap exec()s.  Iterate over all
	namespaces, taking out a nonzero-lmid consistent region when
	needed.  Look up the link map for the appropriate lmid.  No longer
	read the lmid out of the child: use our loop counter instead.

	* test/triggers/libproc-consistency.c: Adjust for rl_iter_f
	change.  Do not skip nonzero lmids: instead, report all libraries
	until the lmids start to fall (indicating one successful pass).
	Count nonzero lmids: fail iff there were none, if
	rd_loadobj_iter() errored, or if lmids never fell (suggesting a
	failure to traverse the link maps more than once).
	* test/triggers/libproc-pldd.c: Adjust for rl_iter_f change.
	* test/triggers/libproc-dlmadopen.c: Add some informational output
	to confirm that libraries were opened in multiple lmids.
	* test/triggers/libproc-sleeper.c: Add some output on exit, to
	detect crashes of the child.

	* include/rtld_db.h (rd_loadobj_t.rl_base): Rename to...
	(rd_loadobj_t.rl_diff_addr): ... this.
	* libproc/Psymtab.c (Pbuild_file_symtab): Adjust accordingly.
	* libproc/rtld_db.c (rd_loadobj_iter): Likewise.
	* test/triggers/libproc-consistency.c: Likewise.
	* test/triggers/libproc-pldd.c: Likewise.

2013-02-21  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/Pcontrol.h (ps_prochandle_t.bkpt_halted): New, set while
	a breakpoint handler requests that we not continue execution.
	* libproc/Pcontrol.c (Puntrace): Do not resume even on top-level
	Puntrace() unless state is 0 or PS_RUN, and no breakpoint handler
	has requested that we stall.
	(bkpt_handle_start): Set bkpt_halted if a handler so requests.
	(bkpt_handle_singlestep): Likewise.
	(Punbkpt): Clear it if removing the current breakpoint.
	(Pbkpt_continue): Clear it when resuming.
	(Pbkpt_addr): New function.
	* libproc/libproc.h: Prototype it.
	* libproc/rtld_db.c (rd_ldso_consistent_end): Use it.

	* libproc/Pcontrol.h: Fix comment.  Remove prototype of function
	now static.
	(ps_prochandle_t.map_exec): Make an index, not a pointer.
	(ps_prochandle_t.map_ldso): Likewise.
	(ps_prochandle_t.lmids_valid): New, 0 if the link map is unscanned.
	* libproc/Psymtab.c (mapping_purge): Adjust accordingly.
	(object_name_to_map): Likewise.
	(object_to_map): Likewise.
	(Pupdate_maps): Likewise.  Cater for realloc() failure and NULL
	map_file.  Do not look for the dynamic linker in static processes.
	Do not rd_loadobj_iter() ourself: merely set lmids_valid.
	(Paddr2idx): New, like Paddr2mptr() but returning an index.
	(Paddr2mptr): Reimplement in terms of Paddr2idx().

	(file_info_new): Populate file_map.
	(Pbuild_file_symtab): Do not fail if text mappings have no
	file_map.

	(Pupdate_lmids): New, scan the link map iff we have valid
	mappings and are dynamic and haven't done so already.
	(Paddr_to_map): Call it.
	(Plookup_by_addr): Likewise.
	(Pxlookup_by_name): Likewise.
	(Pobject_iter): Likewise.
	(Pobjname): Likewise.
	(Plmid): Likewise.
	(Pvalid_mapping): Likewise.
	(Pfile_mapping): Likewise.
	(Pwritable_mapping): Likewise.

	(symtab_getsym): Coding style fix.

2013-02-12  Nick Alcock  <nick.alcock@oracle.com>

	* Makefunctions (src-name): Pass through absolute path unchanged.
	(shlib-template): No longer add the objdir to the description.
	* README.build-system: Document it.
	* GNUmakefile (objdir): Absolutize the objdir path.
	* libdtrace/Build (DRTI_OBJ): BUILD_DRTI_OBJ is now an absolute
	path.
	* test/triggers/Build (link-trigger): So is this link target.
	* test/utils/Build (link-test-util): And this one.

	* Makefunctions (cmd-template): Support target-specific LDFLAGS.
	(shlib-template): Likewise.
	* README.build-system: Document it.

	* test/Build: Run test/utils/Build.
	* test/utils/Build: Depend on build .a files where necessary.
	* test/utils/baddof.c: Modernize includes.  Use memcpy(), not
	bcopy().
	* test/utils/badioctl.c: Modernize includes. Use gettimeofday(),
	not gethrtime().

	Breakpoints and Pcontrol API revisions.

	* GNUmakefile (CC): Export.
	(CPPFLAGS): Include the platform directory, include/i386.
	* include/i386/platform.h: New file, define platform-specific
	constants needed for breakpoint handling.
	* libproc/Pcontrol.h (BKPT_HASH_BUCKETS): New.
	(bkpt_handler_t): New structure, the handler for one
	breakpoint. Used by...
	(bkpt_t): ... this new structure, representing a single
	breakpoint.
	(exec_handler_fun): New, a handler for exec()s.
	(ps_prochandle_t.ptrace_count): New, a count of simultaneous
	ptrace() attaches.
	(ps_prochandle_t.detach): New, nonzero if detaching when
	ptrace_count reaches zero.
	(ps_prochandle_t.bkpts): New, breakpoint hash.
	(ps_prochandle_t.num_bkpts): New, counts of active breakpoints.
	(ps_prochandle_t.tracing_bkpt): New, address of breakpoint we are
	stepping past.
	(ps_prochandle_t.singlestepped): New, 1 if we are stopped having
	singlestepped past a breakpoint.
	(ps_prochandle_t.exec_handler): New, handler for exec()s.
	* libproc/libproc.h: Remove obsolete comments.  Fix includes.
	Introduce new prototypes: remove obsolete ones.
	(C_*): Remove obsolete error codes.
	* libproc/Pcontrol.c (Pgrabbing): New, horrible internal hack to
	change error behaviour of Ptrace() inside Pgrab().
	(_libproc_init): Now static.
	(Pgrab): Return errnos, not C_*/G_* constants.  Allocate space for
	breakpoints: initialize new fields.  Adjust to Ptrace()/Puntrace()
	API changes.
	(Pcreate): Likewise. No longer return a pathname.  Set up Pmemfd()
	only after fork()/exec().
	(Pcreate_error): Remove.
	(Pgrab_error): Likewise.
	(Pfree): Now static.  Do not reset maps on free.  Free the auxv
	and breakpoint structures.
	(Pmemfd): Fix error message.  Return on error, rather than
	exiting.
	(Prelease): Support NULL calls, like free().  Flush breakpoints.
	(Ptrace_set_detached): New, set the detach state on final
	Puntrace() / Prelease().
	(Psetrun): Removed, replaced with...
	(Ptrace): ... this new function...
	(Puntrace): ... and this one.
	(Pwait): Take a block boolean, not a block timeout.  Pass WNOHANG
	if it is set: handle a WNOHANG that did nothing.  Handle stops and
	traps under Ptrace(), including breakpoint handling and exec
	detection.
	(bkpt_by_addr): New, return a breakpoint structure from the hash
	given its address, optionally unchaining it from that hash.
	(mask_bkpt): New, mask out the machine-specific breakpoint
	instruction from the given machine word.
	(Pbkpt): New, introduce a breakpoint with the given handler on the
	given address.
	(Punbkpt): New, remove a breakpoint from the given address,
	running its cleanup handler (if any).
	(bkpt_flush): New, destroy all breakpoints.
	(bkpt_handle): New, handle a breakpoint.
	(bkpt_handle_start): New, handle the start of a breakpoint,
	immediately after trap at the breakpoint address.
	(Pbkpt_continue): New, continue execution, even if we are stopped
	at a breakpoint.
	(Pbkpt_continue_internal): New, do the singlestepping part of
	continuing execution, if necessary.
	(Pbkpt_handle_singlestep): New, do all post-singlestep work.
	(set_exec_handler): New.
	* libdtrace/dt_proc.c (dt_proc_control): Adjust to the API
	changes.
	(dt_proc_control_cleanup): Likewise.
	(dt_proc_destroy): Likewise.

	rtld_db support.

	* sys/link.h: Remove.
	* libdtrace/drti.c: Adjust.
	* include/sys/machelf.h: Likewise.
	* include/rtld_db.h: Likewise.  Remove pre-ANSI-C support.
	New prototypes.
	(rd_err_e): New.
	(rd_event_e): Likewise.
	(rd_state_e): Likewise.
	(rd_event_msg_t): Likewise.
	(rd_event_fun): Likewise.
	(rd_loadobj_t): Most fields removed, types of remaining fields
	adjusted.
	* include/sys/auxv.h: Remove pre-ANSI-C support.  Use Linux's
	definition.
	* libproc/Psymtab.c (Prd_agent): No longer static.
	(Pupdate_maps): Adjust rd_loadobj_iter() call.
	(Pupdate_syms): New, unconditionally update the maps.
	(Prd_agent): Likewise.
	(build_map_symtab): Likewise.
	(rd_loadobj_iter): Move this...
	* libproc/rtld_db.c: ... to this new file, an implementation of
	rtld_db, and reimplement.
	* libproc/Psymtab.c (Preadauxvec): Move this...
	(Pgetauxval): ... and this...
	* libproc/elfish.c: ... to this new file, a library of ELF
	manipulation routines, and reimplement.
	* libproc/elfish_64.c: New file, bitness-dependent ELF
	manipulation routines.
	* libporc/elfish_32.c: Likewise, 32-bit wrapper.
	* libproc/elfish_impl.h: Prototypes for elfish_*.c routines.
	* libproc/mkoffsets.sh: New, compute 64/32-bit fields offsets and
	sizes at compile time.
	* libproc/glibc_internal_link.h: ... from this.
	* libproc/Build: Run it when needed.  Adjust include paths,
	dependencies, sources, and clean target appropriately.
	* libproc/.gitignore: New, ignore mkoffsets-generated file.
	* libproc/libproc.h: Header modifications.  New prototypes.
	* libproc/Pcontrol.h: Likewise.
	(rd_agent_t): New, state of a rd_agent.
	(elf_file_t): Unused, remove.
	(ps_prochandle.no_dyn): New, 1 if statically linked.
	(ps_prochandle.r_debug_addr): New, address of _r_debug.
	(ps_prochandle.elf64): New, 1 if 64-bit.
	* libproc/Pcontrol.c (Pgrab): Set it.
	(Pcreate): Likewise.
	(Prelease): Don't bother to set fields in something we're about to
	free.
	(Pwait): Reset r_debug_addr on exec().
	(Pread_scalar): New function, read a primitive type.
	* libdtrace/dt_proc.c (dt_proc_rdevent): New, rd_loadobj_iter()
	callback.
	(dt_proc_attach): Call it.  Rip out breakpoint manipulation.
	Uncomment.
	(dt_proc_control): Remove obsolete references to 'synchronous
	mode' and breakpoints.

	Userspace symbol management revamp.

	* include/rtld_db.h (rd_loadobj_t): Remove more unnecessary
	fields.
	* include/sys/procfs.h (prmap_file_t): New structure, a single
	mapped file, possibly mapped many times, hashed by name (the
	mappings themselves are sorted by address).
	(prmap_t.pr_mapname): This moved into the prmap_file_t.
	(prmap_t.pr_file): Points to this mapping's prmap_file_t.
	(prmap_t.pr_pagesize): Redundant, removed.
	(prmap_t.pr_dev): Track the device as well as inode number of each
	mapping.
	* libproc/Pcontrol.h: Adjust prototypes.
	(file_info_t): Drop dead CTF and PLT-related fields. Track dev/ino
	of mapping, and its real name: track its primary text mapping by
	index, not pointer, so we can realloc() the array freely.  Stop
	using plist_t.  Drop the file_class; we have ps_prochandle_t.elf64
	now.  Drop file_r*; we have prmap_file_t.prf_mapname now.  Drop
	saddrs-related noise.
	(map_info_t): Drop map_offset, we do not work with core files.
	Drop map_relocate.
	(elf_file_header): Remove, unused.
	(ps_prochandle_t.map_count): Rename to...
	(ps_prochandle_t.num_mappings): ... this.
	(ps_prochandle_t.file_head): Transform this list...
	(ps_prochandle_t.file_list): ... into this one.
	(ps_prochandle_t.map_files): Hash of prmap_file_t by name.
	(MAP_HASH_BUCKETS): New, bucket count of map_files.
	* libproc/libproc.h: Tweaks, prototype adjustments.

	* libproc/Psymtab.c: Adjust includes, prototypes.
	(string_hash): New, map_files hash function.
	(pr_order_t): Remove, unused.
	(get_saddrs): Likewise.
	(file_info_new): Don't call it. No need to mess about with address
	spaces anymore: just chase the map_pmap.pr_file.
	(file_info_free): Split into...
	(file_info_del): ... this unconditional zero-refcount deallocator,
	and...
	(file_info_purge): ... this purger of all zero-refcount
	file_infos.
	(map_info_free): Resculpt into...
	(mapping_purge): ... this purger of all map_info_t, prmap_file_t
	and prmap_t's.
	(Psym_init): New, initialize the sybmol table machinery.
	(Psym_free): New, the opposite of Psym_init().
	(Pprmap_file_by_name): New, search the map_files hash table.
	(map_iter): Use rl_dyn, not rl_base, to find the associated
	mapping.  No longer allocate file_info_t's: just find the existing
	one. No longer initialize file_r*.  Populate file_lname /
	file_lbase in the file_info only if not already populated.
	(Pupdate_maps): Purge mappings wholesale and rebuild them each
	time, building the new prmap_file structures.  Use getline(), not
	fgets().  Skip anonymous and special mappings.  Determine the
	primary text and data mappings correctly.  Recognize the dynamic
	linker rather than taking a flying guess.
	(Prd_agent): Revive.
	(Pbuild_file_symtab): No longer read in the dynamic or CTF
	sections, or the PLT.  Use Ptrace()/Puntrace() machinery.  Do not
	hold the ELF file open.  Populate the file_dyn_base correctly, and
	adjust it according to the bias.
	(Paddr2mptr): Adjust.
	(Pobject_iter): Adjust for data structure changes.
	(Plmid): Always catch uninitialized mappings.
	(Psymbol_iter_by_addr): Adjust for removal of build_map_symtab()
	in favour of Pbuild_file_symtab().
	(Preset_maps): Adjust for data structure changes.

	(object_to_map): Fix inaccurate comment.  Adjust for data
	structure changes: remove terminally broken 'partial match'
	support (if needed, we can reimplement it).
	(object_name_to_map): Remove special-casing for executable
	mapping.
	(Paddr_to_map): No longer stub out.
	(Plmid_to_map): Likewise.
	(i_Pxlookup_by_addr): Likewise. Fold into...
	(Plookup_by_addr): ... its only caller.  Adjust for data structure
	changes: always catch uninitialized mappings.  Drop pointless
	symbol thrashing about.
	(Pxlookup_by_name): No longer stub out.  Use DTrace lists.
	Properly initialize returned structures.  Adjust for removal of
	build_map_symtab() in favour of Pbuild_file_symtab(), and data
	structure changes.
	(Pobjname): No longer stub out.  Adjust for data structure
	changes: always catch uninitialized mappings.  Don't crash if the
	lname or pname of the mapping is NULL.

	(Pvalid_mapping): New function.
	(Pfile_mapping): Likewise.
	(Pwritable_mapping): Likewise.

	(map_set): Remove, unused.
	(load_static_maps): Likewise.
	(exec_map): Likewise.
	(is_mapping_in_file): Likewise.
	(build_map_symtab): Likewise.
	(read_ehdr32): Likewise.
	(read_ehdr64): Likewise.
	(Pfindmap): Likewise.
	(Pinitsym): Likewise.

	* include/sys/elf_386.h: Remove, obsolete.
	* include/sys/elf_amd64.h: Likewise.
	* include/sys/elftypes.h: Likewise.
	* include/sys/machelf.h: Likewise.
	* libproc/Putil.h: Likewise.
	* libproc/Putil.c: Likewise.
	* libproc/mapfile-vers: Likewise.
	* libproc/amd64/Pisadep.c: Likewise.
	* libdtrace/dt_pid.c (dt_pid_per_mod): Use Pwritable_mapping(),
	not Ppltdest().
	* libproc/Build: Drop deleted files.
	* libproc/Pcontrol.c (_dprintf): Moved from Putil.c.
	(Pcreate): Initialize symbol tables.
	(Pgrab): Likewise.
	(Pfree): Free them.
	(Pclose): Reset (discard) mappings.  Act like free() when passed a
	null pointer.

	* libproc/Pcontrol.c (Pset_procfs_path): Code style.
	* libdtrace/dt_proc.h: Purge #ident.
	* include/sys/procfs.h: Adjust includes.

	* test/unittest/libproc/tst.consistency.sh: New test...
	* test/triggers/libproc-consistency.c: ... implemented in this new
	program...
	* test/triggers/libproc-dlmadopen.c: ... using this subprocess...
	* test/triggers/libproc-dlmlib.c: ... that dlopen()s this shared
	library.

	* test/unittest/libproc/tst.plddCreate.sh: New test...
	* test/unittest/libproc/tst.plddGrab.sh: ... and its grab
	variant...
	* test/triggers/libproc-pldd.c: ... implemented in this new
	program...
	* test/triggers/libproc-sleeper.c: ... and its victim.
	* test/unittest/libproc/tst.plddCreate.r: Results for this test.
	* test/unittest/libproc/tst.plddGrab.r: Likewise.

	* test/unittest/libproc/tst.plddCreate32.sh: New test...
	* test/unittest/libproc/tst.plddGrab32.sh: ... and its grab
	variant...
	* test/triggers/libproc-sleeper-32.c: ... and its victim.
	* test/unittest/libproc/tst.plddCreate32.r: Results for this test.
	* test/unittest/libproc/tst.plddGrab32.r: Likewise.

	* test/unittest/libproc/tst.plddCreatePIE.sh: New test...
	* test/unittest/libproc/tst.plddGrabPIE.sh: ... and its grab
	variant...
	* test/triggers/libproc-sleeper-pie.c: ... and its victim.
	* test/unittest/libproc/tst.plddCreatePIE.r: Results for this test.
	* test/unittest/libproc/tst.plddGrabPIE.r: Likewise.

	* test/unittest/libproc/tst.plddCreatePIE32.sh: New test...
	* test/unittest/libproc/tst.plddGrabPIE32.sh: ... and its grab
	variant...
	* test/triggers/libproc-sleeper-pie-32.c: ... and its victim.
	* test/unittest/libproc/tst.plddCreatePIE32.r: Results for this test.
	* test/unittest/libproc/tst.plddGrabPIE32.r: Likewise.

	* test/triggers/Build: Add new test 'triggers', and the libraries
	and subprocesses they use, compiled with appropriate flags.

	* test/unittest/pid/tst.manypids.sh: This test needs porting.
	* test/unittest/vars/tst.ucaller.sh: Likewise.

2013-01-17  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/Pcontrol.h (ps_prochandle): Add ptraced.
	* libproc/Pcontrol.c (Pcreate): Set it.
	(Prelease): Likewise.
	(Psetrun): Likewise.

	* libproc/Psymtab.c (PTRACE_GETMAPFD): Add definition: this is not
	in glibc yet.
	(MA_RWX): Remove, unused.
	(read_dynamic_phdr32): Likewise.
	(read_dynamic_phdr64): Likewise.
	(file_differs): Likewise.
	(fake_elf): Likewise.
	(build_fake_elf): Likewise.
	(Pbuild_file_symtab): Rewrite ELF file-acquisition code to use
	PTRACE_GETMAPFD rather than file opening and build_fake_elf().
	Remove support for building symtabs of dead processes.  Do not
	assume that we can always acquire all ELF objects via
	/proc/$pid/exe: this is not true of any mapping other than the
	executable's.
	* libproc/Psymtab_machelf32.c: Remove, unused.
	* libproc/Psymtab_machelf64.c: Likewise.
	* libproc/Psymtab_machelf.h: Likewise.
	* libproc/Build: Adjust.

	* include/sys/elf_amd64.h (R_*, ELF_AMD64_*): Drop relocation
	constants with nonstandard names.
	(SHT_*, SHF_*, SHN_*): Unused, remove.
	* libdtrace/dt_link.c (prepare_elf64): Use standard name for
	relocation constant.
	* libdtrace/dt_ident.c: Remove unused header.
	* include/sys/procfs.h: Remove unused junk.

	* libproc/Pcontrol.h (sym_tbl): Remove unused sym_elf, sym_elfmem.
	(file_info): Remove unused file_elfmem.  Dynamically size
	file_pname.
	(PRMAPSZ): Remove, nonportable, inapplicable to Linux.
	* include/sys/procfs.h (PRMAPSZ): Likewise.
	(prmap): Dynamically size pr_mapname.  Drop pr_shmid, pr_filler;
	add pr_inum.
	(MA_*): Remove all but MA_READ, MA_WRITE, MA_EXEC.
	* libproc/Psymtab.c (file_info_new): Dynamically size file_pname.
	(file_info_free): Drop checks for NULL before free() and elf_end().
	Free file_pname.
	(map_info_free): Free pr_mapname.
	(Pupdate_maps): Reset maps and return if opening the mapfile
	fails, not if it succeeds.  Dynamically size the map filename;
	avoid overrunning the permissions array.  Record the inode number
	and refresh the maps if it changes.  Do not hardcode the page
	size.  Don't bother checking for changes to things that Linux
	/proc/pid/maps does not track.

	* libproc/libproc.h (_libproc_no_qsort): Remove.
	(_proc_incore_elf): Likewise.
	* libproc/Pcontrol.c: Likewise.
	(_libproc_init): Don't initialize them.
	* libproc/Psymtab.c (optimize_symtab): Remove _libproc_no_qsort
	case.
	(sym_by_addr_binary): Remove, moving body into...
	(sym_by_addr): ... here.
	(sym_by_addr_linear): Remove.
	(sym_by_name_binary): Remove, moving body into...
	(sym_by_name): ... here.
	(sym_by_name_linear): Remove.

2012-11-16  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_impl.h (dt_print_aggdata): Move to...
	* libdtrace/dtrace.h (dtrace_print_aggdata): ... here, and rename.
	Add names to all unnamed arguments.
	* libdtrace/dt_aggrecate.c (dtrace_aggregate_print): Adjust.
	* libdtrace/dt_consume.c (dt_print_aggs): Likewise.
	(dt_print_agg): Likewise.

	* libdtrace/dt_options.c (dt_opt_getenv_prefix): New, get an
	env var with a given prefix and upcased option name.
	(dtrace_setoptenv): New function, set options from applicable
	env vars.
	* libdtrace/dtrace.h: Declare it.
	* libdtrace/libdtrace.ver: Export it.
	* cmd/dtrace.c (main): Use it.
	* cmd/dtrace.1: Document all useful env vars.

	* cmd/dtrace.c (DTRACE_OPTSTR): Remove -t.
	(usage): Likewise.
	(main): Likewise.  Respect _DTRACE_TESTING instead.
	* runtest.sh: Export DTRACE_OPT_SYSLIBDIR and _DTRACE_TESTING
	instead of using the undocumented -t option.

2012-11-12  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_symtab.c (DT_ST_PACKED): Use 0x02, not 0x03, so
	that flag testing works.
	(dt_symbol): Make dts_name a union with string and offset fields.
	(dt_symtab): New field dtst_strtab.
	(dt_symbol_sort_cmp): Adjust string field name.
	(dt_symbol_insert): Likewise.
	(dt_symtab_destroy): Likewise. Free the strtab; free the symbol
	name only if not packed.
	(dt_symbol_by_name): Look in the string table if packed.
	(dt_symbol_name): Likewise.
	(dt_symtab_pack): Do nothing if already packed.  Construct the
	string table.
	* libdtrace/dt_module.c (dtrace_update): Pack the symbol tables.

	* libdtrace/dt_module.c (dtrace_addr_range_merge): New function,
	merges adjacent address range entries.
	(dtrace_update): Use it after sorting the address ranges.

	Warning police.

	* libdtrace/dt_aggregate.c (dt_aggregate_valcmp): If there are no
	aggregate records, return 0, since two nonexistent aggregate
	records are by definition equal to each other.
	* libdtrace/dt_pid.c (dt_pid_usdt_mapping): #if out the variable
	as well as its uses.
	* libproc/Psymtab.c (Pupdate_maps): Likewise.
	(Preadauxvec): Likewise.
	(Pbuild_file_symtab): Clarify loop condition.
	* libdtrace/dt_proc.c (dt_proc_bpmain): Not currently used, #if out.
	(dt_proc_attach): Likewise.
	* libdtrace/i386/dis_tables.c (dtrace_disx86): Initialize some
	variables which could well be unused uninitialized.
	* libproc/Psymtab_machelf32.c (fake_elf32): Likewise.  Drop
	pointless conditionals around free().
	* libdtrace/i386/dt_isadep.c: Include <port.h> for gmatch().
	* test/triggers/pid-tst-gcc.c: Fix includes.
	* test/triggers/pid-tst-ret1.c: Likewise.

2012-10-30  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_symtab.h (dt_symbol, dt_symtab, DT_ST_*): Move to...
	* libdtrace/dt_symtab.c: ... here.

2012-11-02  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace-utils.spec (Requires): Unbump dtrace-kernel-interface.

2012-10-29  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_module.c (dtrace_lookup_by_addr): sip and symp can
	both be NULL.
	* libdtrace/dt_symtab.c (dt_symbol_search_arg): Unused, remove.
	(dt_symbol_search_cmp): Consider addresses within the range
	symbol..symbol+size to match the symbol.
	(dt_symbol_by_addr): Likewise.  bsearch() returns a pointer to a
	pointer to the symbol.

	* test/unittest/grammar/tst.stmts.r: Regenerated.
	* test/unittest/printf/tst.basics.r: Likewise.
	* test/unittest/printf/tst.sym.d: No longer XFAIL.
	* test/unittest/stack/tst.default.r: New.
	* test/unittest/stack/tst.default.r.p: Filter out everything but
	unresolved addresses and dtrace_stacktrace().

2012-10-18  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_module.c (dtrace_update): Shuffle dtrace to the
	front of the module list, not shared_ctf.
	* test/unittest/types/tst.notypeload.d: Both 2 and 3 are valid
	outputs. Emit a list of modules from which CTF was loaded on test
	failure.
	* test/unittest/types/tst.notypeload.d: Adjust.

2012-10-10  Nick Alcock  <nick.alcock@oracle.com>

	* .gitignore: Ignore build*, not build-*.

	Rename dtrace_ctf -> ctf / ctf_shared renaming.

	* libdtrace-ctf: Pull in .dtrace_ctf -> .ctf changes.
	* libdtrace/dt_impl.h (DT_DM_SHARED): New.
	(DT_DM_KERN_UNLOADED): Renumber.
	(dt_ctf_elf): Fix comment to cater for the renaming.
	* libdtrace/dt_module.c (dt_module_load): Build section names for
	DT_DM_SHARED modules differently.
	(dt_kern_module_find): Look up "ctf" in the kernpath hash and
	"shared_ctf" in the module list, not "dtrace_ctf" in both.
	Set DT_DM_SHARED appropriately.  Adjust error messages.
	(dt_modsym_update): Transform the "ctf" module's name to
	"shared_ctf".
	(dtrace_update): Shuffle "shared_ctf" to start, not "dtrace_ctf".
	* libproc/Psymtab.c (Pbuild_file_symtab): Cater for the section
	renaming.
	* test/modules: Cater for the module renaming.
	* test/unittest/types/tst.notypeload.sh: Likewise.
	* dtrace-utils.spec (Requires): Boost dtrace-kernel-interface.

2012-09-26  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace-utils.spec (BuildRequires): Do not require kernel-headers.

2012-09-24  Nick Alcock  <nick.alcock@oracle.com>

	* Makecheck (check-module-loading): Filter out @@ flags. Do not load
	modules marked as @@unload-only.

2012-09-17  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace-utils.spec (kver_max): Remove;
	(kver_min): Rename to...
	(kver): ... this, and hardwire to current dtrace-modules version.
	(BuildRequires): Use it.
	(%build): Adjust.
	(%install): Likewise.

2012-09-14  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/sed-replace.m4: New, generate sed script containing
	warning tokens if preprocessor replacement failed.
	* libdtrace/Build (%.sed): Use m4: grep for the warning token and
	fail if found.  Put the resulting sed scripts in the objdir.
	(dlib creation): Work only over WORKING_DLIBS to prevent spurious
	errors.  Look in the objdir for sed scripts.
	(dlibs): Only process WORKING_DLIBS.
	* libdtrace/io.sed.in: Change comment and SED_REPLACE. Introduce
	diversion before seddery.
	* libdtrace/ip.sed.in: Likewise.
	* libdtrace/net.sed.in: Likewise.
	* libdtrace/procfs.sed.in: Likewise.
	* libdtrace/tcp.sed.in: Likewise.
	* libdtrace/udp.sed.in: Likewise.
	* GNUmakefile (PREPROCESS): No longer preserve comments.
	(SECONDEXPANSION): Enable.
	* dtrace-utils.spec (BuildRequires): Require m4.

	* libdtrace/Build (libdtrace-build_SRCDEPS): Add dt_grammar.h.

	* runtest.sh: Linefeed-terminate the skip message.

2012-09-12  Nick Alcock  <nick.alcock@oracle.com>

	* GNUmakefile (KERNELDIR): New variable pointing to a kernel
	tree.
	* libdtrace/Build (%.sed): Use it instead of a direct uname -r
	invocation.
	* dtrace-utils.spec (%build): Set it, pointing at any suitable
	kernel devel package.
	(kver_min): New, minimum kernel version this userspace works with.
	(kver_max): New, maximum kernel version this userspace works with.
	(BuildRequires): Require an appropriate development kernel, for
	header substitutions.

	* GNUmakefile (objdir): Do not use uname -r.
	* runtest.sh: Adjust.  Fix the LD_LIBRARY_PATH.

2012-09-11  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_proc.h (dt_proc.hash_t): New members
	dph_destroy_lock and dph_destroy_locked.
	* libdtrace/dt_proc.c (dt_proc_hash_create): Initialize the lock.
	(dt_proc_hash_destroy): Take it out around proc destruction...
	(dt_proc_control): ... and around control thread termination.
	Erase ourselves from the lrulist here...
	(dt_proc_control_cleanup): ... not here.

	* libdtrace/dt_impl.h (DT_DM_KERN_UNLOADED): New module flag.
	* libdtrace/dt_module.c (dt_kern_module_find): Set it.  Never
	point non-kernel-modules at dtrace_ctf.
	(dt_module_load): Return without loading ELF symbol table only for
	loaded kernel modules.
	(dtrace_lookup_by_name): Look up symbols in dt_kernsyms only
	if loaded: otherwise, use ELF lookup.
	(dtrace_lookup_by_addr): Always error for non-loaded kernel
	modules.
	(dtrace_symbol_type): Likewise.
	* test/unittest/types/tst.unloaded.d: Verify that casting to types
	in unloaded kernel modules works.
	* test/unittest/types/err.unloaded_var.d: Verify that using
	variables in unloaded kernel modules does not work.

	* runtest.sh: Add @@quiet for modules whose removal should not
	be commented on.  Log skips.
	* test/modules: Add ext3, hidden.
	* test/unittest/misc/tst.include.sh: Skip it.

	* libdtrace/Build: Use Bison as the parser generator.

	* libdtrace/dt_pcb.h (pcb_xlator_input): New.
	(pcb_array_dimens): Likewise.
	* libdtrace/dt_grammar.y (translator_input_type): New, type_name with
	pcb_xlator_input flipped on beforehand.
	(translator_close_paren): Flip pcb_xlator_input off again.
	(translator_definition): Use them.
	(array): Flip pcb_array_dimens.
	* libdtrace/dt_lex.l (id_or_type): In a program clause with
	pcb_xlator_input turned on, an id_or_type followed by > is an
	identifier.  In type context, anything we see is a type.  In an
	array dimension, after having already seen a type, this is a new
	identifier: intern it.

2012-09-10  Kris Van Hees  <kris.van.hees@oracle.com>

	* INCOMPATIBILITIES: Document signal-discard incompatibility.
	* libdtrace/Build: Change substitution of regs.d and sedded .d
	files.  regs.d is no longer built.  io.d, procfs.d, and sched.d
	are now installed.

	* libdtrace/dt_open.c (_dtrace_globals): Add curcpu and d_path.
	* uts/common/sys/dtrace.h: Likewise.  Fix DIF_SUBR_MAX.

	* libdtrace/i386/regs.d.in: Rename to...
	* libdtrace/i386/regs.d: ... this, and hardwire values.
	* libdtrace/i386/regs.sed.in: Remove.
	* libdtrace/io.d.in: Rewrite.
	* libdtrace/io.sed.in: Likewise.
	* libdtrace/procfs.d.in: Likewise.
	* libdtrace/sched.d: Fix dependencies.  Remove dead curcpu-related
	code.

2012-09-07  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace-utils.spec: RPM macros use %, not $.

2012-09-06  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_module.c (dt_modsym_update): Do not filter out
	cloned functions.

2012-09-05  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_pragma.c (dt_pragma_line): Support GCC-style
	#line directives.

	* uts/common/sys/dtrace.h: No longer include <sys/ctf_api.h>...
	* libdtrace/dtrace.h: ... do it here instead.
	* dtrace-utils.spec: Split out a -devel package containing
	libdtrace/dtrace.h that depends on libdtrace-ctf-devel.
	* libdtrace-ctf: Pull in the <sys/ctf_types.h> move.

	* uts/common/sys/dtrace_ioctl.h: No longer include
	<linux/types.h>.

	* test/unittest/aggs/tst.subr.d: Enable this test, commenting out
	unimplemented subrs and compensating accordingly.
	* test/unittest/dtrace-util/tst.InvalidId2.sh: Note that the
	behaviour this tests for is simply not implemented yet.
	* test/unittest/regression/exit_panic.d: Fix copyright date.

	* runtest.sh: Fix non-installed include path.
	* uts/Build: Install sys/dtrace_ioctl.h.
	* dtrace-utils.spec: Add it to %files.

2012-09-03  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace-ctf: Pull in the libdtrace-ctf-devel package split.
	* dtrace-utils.spec: Adapt to libdtrace-ctf-devel package split.
	Next version is 0.3.  Use macros for most file locations.
	Improve RPM changelog.

2012-08-30  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_pcb.h (pcb_sou_deref): New.
	* libdtrace/dt_lex.l (id_or_type): Use it to track certain-to-
	be-identifiers after -> and .
	* libdtrace/dt_grammar.y (postfix_expression): Remove
	various DT_TOK_TNAME rules: no longer required.
	(enum_specifier): Likewise.
	(enum_definition): Likewise.
	* unittest/types/tst.notypeload.sh: Test this case.

	* Makeconfig: Filter --coverage out of the LDFLAGS as well as the
	CFLAGS.
	* README.build-system (name_NOLDFLAGS): New, filter out unwanted
	LDFLAGS from a target.
	* Makefunctions (shlib-template): Implement it for shared libraries.
	(cmd-template): Likewise for binaries.
	* test/triggers/Build (TRIGGERS): Use it to filter out test coverage
	info from triggers.
	* test/utils/Build (CMDS): Likewise, for utils.

2012-08-29  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_lex.l (yyinit): Call yyrestart().
	* runtest.sh: Add @@no-xfail.  Avoid test-output corruption when tests
	hang.  Revamp success/failure detection.
	* test/unittest/profile-n/err.*.d: @@skip -> @@no-xfail.

2012-08-10  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Allow @@unload-modules in test/modules
	to specify modules that should only be unloaded, not
	loaded.
	* test/modules: Use it for dtrace-ctf and dtrace.
	* test/unittest/regression/tst.array.d: New test for the
	array CTF ID wrapped-type propagation bug.

2012-08-03  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Compare sorted results.  Print hanging-dtrace
	messages to standard error even when in quiet mode.  Tiny
	grammar nit.

	* test/demo/script/syscall.d: Run /bin/true, not /bin/date.
	* test/demo/script/syscall.r: Adjust.

2012-08-02  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_proc.c (dt_proc_control_data): New members
	dpcd_start_proc and dpcd_start_proc_argv.
	(dt_proc_create_thread): Accept them from callers, and assign.
	Free the dpr on error.
	(dt_proc_remove): New function.
	(dt_proc_create): Relocate process creation...
	(dt_proc_grab): ... and grabbing...
	(dt_proc_control): ... to here.  Pass created flag in to Psetrun().
	Drop all the way out of the loop when PS_DEAD.  Null out dpr_proc
	then too, and clean up and free the dpr.
	(dt_proc_error): Relocate: no longer Prelease(), or free the dpr.
	(dt_proc_destroy): No longer Prelease() here either.
	(dt_proc_control_cleanup): Prelease() here instead, and erase
	ourselves from the dpr lrulist.
	* libdtrace/dt_proc.h (dt_proc_t): Fix description of dpr_cv.
	* cmd/dtrace.c (prochandler): Rewrite, reducing process live count
	when no process is given.
	* COMMANDLINE-OPTIONS: -c now works, as does -p.

	* libproc/Pcontrol.c (_libproc_init): Put debugging under
	DTRACE_DEBUG.
	(Pcreate): Raise SIGSTOP before execution, flip on
	PTRACE_O_TRACEEXEC and resume.  Processes start in tracestop
	state.
	(Pgrab): Failure to ptrace() is not an error, but successful
	ptrace()s must be followed by a waitpid() to prevent pollution of
	Pwait() calls with SIGTRAPs.  Relabel ECHILD errors to ESRCH.
	(Prelease): Don't use deprecated PTRACE_KILL (which doesn't work
	when detached anyway).
	(Psetrun): Optionally (if grabbed) set running via PTRACE_CONT,
	not PTRACE_DETACH.
	* libproc/libproc.h (Psetrun): Adjust prototype.

	* test/unittest/dtrace-util/tst.ProcGrab.sh*: Test that dtrace -p
	works, and does not miss the exit probe.
	* test/unittest/dtrace-util/tst.ProcInvoke.sh*: Test that dtrace -c
	works, does not miss the exec-success nor exit probes, and that
	execname has the right value in exec-success.
	* test/unittest/dtrace-util/err.NoProcNoGrab.sh: Test that
	dtrace -p of a nonexistent process fails immediately.
	* test/unittest/dtrace-util/err.NoProcNoInvoke.sh: Likewise, for
	dtrace -c of a nonexistent binary.

	* libdtrace/dt_proc.c (dt_proc_attach): Remove unused variable.
	* libproc/Psymtab.c (rd_loadobj_iter): Fix compiler warning.
	(Pupdate_maps): Avoid use of uniniitalized variable when called
	for a process with an empty memory map (perhaps a dead one).
	* test/unittest/dtrace-util/tst.InvalidId2.sh: Fix @@xfail
	comment.

2012-08-01  Nick Alcock  <nick.alcock@oracle.com>

	Lazy kernel module path initialization.

	* libdtrace/dt_module.c (dtrace_update): Move kernpath update...
	(dt_kern_path_lookup_by_name): ... to here.
	(dt_kern_module_init): Split out dm_file initialization...
	(dt_kern_module_find): ... to this new function.
	(dt_module_load): Call it at module load time.
	* INCOMPATIBILITIES: Note the effect of this on the library API.

	* test/unittest/buffering/tst.cputime.sh: No longer expected to fail.
	* test/unittest/sched/test.options: These tests are no longer XFAIL...
	* test/unittest/sched/tst.enqueue.d: ... except this one.
	* test/unittest/tracemem/tst.init_task.d: Avoid cast problem.
	* libproc/Psymtab.c: Coding style fix.
	* README: Mention CTF external variable support.

2012-07-30  Nick Alcock  <nick.alcock@oracle.com>

	Support CTF types for global kernel variables (the ` operator).

	* libdtrace-ctf: Updated: ctf_lookup_variable() is now available.
	* libdtrace/dt_module.c (dtrace_symbol_type): Use it in new
	code for kernel module symbol->type mapping.
	(dtrace_lookup_by_name): Only update the syminfo pointer if it
	is non-NULL.
	(dt_modsym_update): Many new unimportant symbols: look for name
	prefixes in most cases, not arbitrary substrings.
	(dt_module_getctf): Improve CTF failure error message.
	(dt_module_load): Change the CTF section name.
	(dt_kern_module_init): Change comment accordingly.
	* libproc/Psymtab.c (Pbuild_file_symtab): Change the CTF
	section name.  Support CTF section name prefixes.

	Testsuite updates.

	* test/unittest/aggs/tst.subr.d: `cpu_lock -> `text_mutex;
	`vfssw_lock -> `tasklist_lock.

	* test/unittest/assocs/err.D_OP_INCOMPAT.dupgtype.d:
	`kmem_flags -> `max_pfn; `rootvp -> `cad_pid.
	* test/unittest/assocs/err.D_OP_INCOMPAT.dupttype.d: Likewise.
	* test/unittest/scalars/err.D_OP_INCOMPAT.dupgtype.d: Likewise.
	* test/unittest/scalars/err.D_OP_INCOMPAT.dupltype.d: Likewise.
	* test/unittest/scalars/err.D_OP_INCOMPAT.dupttype.d: Likewise.
	* test/unittest/funcs/err.badbcopy.d: Likewise.
	* test/unittest/funcs/err.badbcopy1.d: Likewise.
	* test/unittest/funcs/err.badbcopy2.d: Likewise.
	* test/unittest/funcs/err.badbcopy3.d: Likewise.
	* test/unittest/pointers/err.D_OP_LVAL.AddressChange.d: Likewise.
	* test/unittest/pointers/err.InvalidAddress1.d: Likewise.
	* test/unittest/struct/tst.StructDataTypes.d: Likewise.
	* test/unittest/funcs/tst.bcopy.d: Likewise.  No longer XFAILed.
	* test/unittest/inline/tst.InlineDataAssign.d: Likewise.
	* test/unittest/inline/tst.InlineExpression.d: Likewise.
	* test/unittest/inline/tst.InlineTypedef.d: Likewise.
	* test/unittest/pointers/tst.GlobalVar.d: Likewise.
	* test/unittest/pointers/tst.basic1.d: Likewise.
	* test/unittest/pointers/tst.basic2.d: Likewise.
	* test/unittest/trace/err.D_TRACE_VOID.bad.d: Likewise.
	* test/unittest/types/tst.ptrincop.d: Likewise.
	* test/unittest/types/tst.ptrops.d: Likewise.
	* test/unittest/union/tst.UnionDataTypes.d: Likewise.

	* test/unittest/trace/tst.misc.d: `kmem_flags -> `max_pfn;
	`rootvp -> `sdt_prefix.  No longer XFAIL.
	* test/unittest/printf/tst.basics.d: `kmem_alloc -> `max_pfn. No
	longer XFAILed.
	* test/unittest/printf/tst.str.d: `rootfs.bo_fstype ->
	vmlinux`saved_command_line.  No longer XFAILed.
	* test/unittest/printf/tst.sym.d: `kmem_flags -> `max_pfn; change
	reason for XFAILing.
	* test/unittest/safety/test.options: Change reason for XFAILing.
	* test/unittest/types/tst.struct.d: Likewise.
	* test/unittest/types/tst.typedef.d: Likewise.

	* test/unittest/safety/tst.rw.d: `clock -> `max_pfn.  Fix casts.

	* test/unittest/assocs/err.D_OP_INCOMPAT.dupgtype.r: Adjusted.
	* test/unittest/assocs/err.D_OP_INCOMPAT.dupttype.r: Likewise.
	* test/unittest/printf/tst.basics.r: Likewise.
	* test/unittest/printf/tst.str.r: Deleted, we cannot predict the
	contents of the kernel command line.
	* test/unittest/printf/tst.sym.r: Adjusted.

	* test/unittest/enum/err.D_UNKNOWN.RepeatIdentifiers.r: Adjust
	for change in libdtrace-ctf error message text.
	* test/unittest/types/err.D_UNKNOWN.dupenum.r: Likewise.
	* test/unittest/types/err.D_UNKNOWN.dupstruct.r: Likewise.
	* test/unittest/trace/err.D_TRACE_VOID.bad.r: Adjust for tiny
	(harmless) change in parsing precedence in the presence of
	multiple interpretations of an error.

	* test/unittest/safety/tst.vahole.d: Note that this test is
	nonportable.
	* test/unittest/scalars/tst.misc.d: Likewise.

	* test/unittest/tracemem/err.D_TRACEMEM_ADDR.badaddr.d: Note
	not yet fixed.

	* test/unittest/tracemem/tst.rootvp.d: renamed to...
	* test/unittest/tracemem/tst.init_task.d: ... this, and
	`rootvp -> `init_task.  No longer XFAIL.

	* test/unittest/types/err.D_CAST_INVAL.badcast.d: Cast to struct
	task_struct rather than char, testing struct type lookup.
	`kmem_flags -> `max_pfn.

	* test/demo/proc/progtime.d: Test proc:::create, not proc:::start.
	* test/demo/proc/test.options: Deleted; no longer XFAIL this directory.
	* test/demo/sdt/callout.d: This test is still XFAIL.
	* test/demo/sdt/interval.d: Likewise.
	* test/demo/sdt/intr.d: Likewise.

	* test/unittest/dtrace-util/tst.InvalidId2.sh: This is XFAIL, -li
	ranges are known broken.
	* test/unittest/dtrace-util/tst.InvalidId2.r: Give the output we
	expect, not the output we see.

	Miscellaneous makefile work.

	* GNUmakefile: Install libraries to lib64, not lib.
	* dtrace-utils.spec: Likewise.

2012-07-25  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_module.c (dt_module_getctf): Drop dtrace_ctf
	hardwiring.

2012-07-24  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_pcb.h (pcb_sou_type): New.
	* libdtrace/dt_lex.l: Use it to track certain-to-be-types in the
	type slot of structs, unions, and enums.

	* libdtrace/dt_grammar.y (struct_or_union_specifier): Remove
	DT_TOK_IDENT rule: no longer required.
	(struct_or_union_definition): Likewise.

	* libdtrace/Build (libdtrace-build_SRCDEPS): Remove.
	(dt_grammar.[chy]): Make into a %.y-origin pattern rule, to get
	the dependency graph correct and prevent .d-file overwriting
	corrupting dependencies.

	* LICENSE: Fix copyright date.

	* README: We have CTF now.

	* dt_impl.h: Tiny layout fix.
	* dt_module.c (dt_module_getctf): Remove extraneous braces.
	* dt_open.c (dtrace_close): Don't leak the dt_ctf_elf handle.

2012-07-23  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_subr.c (dt_printf): Don't call vsnprintf() multiple
	times in a given va_start/va_end round.
	* COMMANDLINE-OPTIONS: Document that -B works.

	* libdtrace/dt_module.c (dt_module_load): Fix flipped failure case
	in module loading.
	(dt_module_getctf): Only try to load the module if it's not
	already loaded: try to load it before checking CTF state.
	(dt_module_shuffle_to_start): New function.
	(dtrace_update): Call it.

	* libdtrace/dt_open.c (dt_vopen): Shuffle the C and D modules to
	the start of the list before doing type lookups that use them.

	* dt_lex.c (S2{RGX_PSPEC}): Filter out BEGIN, END, and ERROR.
	Avoid depending on yytext while unput()ting.
	(id_or_type): Reformulate to avoid looking up unknown types.
	(input): Delete dead code.
	(unput): Likewise.

	* test/unittest/offsetof/err.D_UNKNOWN.badmemb.r: Adjust.
	* test/unittest/typedef/err.D_SYNTAX.BadExistingTypedef.r: Likewise.

2012-07-21  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_impl.h (dt_module): New dm_ctdata_data member,
	holding dynamically-allocated decompressed CTF data.
	* libdtrace/dt_module.c: Include <zlib.h>.
	(GZCHUNKSIZE): New macro, arbitrarily set at 512Kb.
	(dt_ctf_uncompress): New function.
	(dt_module_load): Call it when CTF sections are present.  Do not
	try to pass the uninitialized symbol and string tables to
	ctf_bufopen().  Log CTF errors in the debugging stream.
	(dt_module_getctf): Kernel modules with CTF with a parent of
	"PARENT" should use dtrace_ctf instead.
	(dt_module_unload): Free dm_ctdata_data.
	(dt_kern_module_init): Consider the dtrace_ctf module to be
	built-in.

	* libdtrace/dt_open.c (_dtrace_globals): Fix the CTF types
	for curthread, getmajor(), getminor(), mutex_owned(),
	mutex_owner(), mutex_type_adaptive(), mutex_type_spin(),
	rw_iswriter(), rw_read_held(), and rw_write_held().

	* INCOMPATIBILITIES: Document the permanent unavailability of the
	msgdsize() and msgsize() subroutines.

	* test/demo/builtin/{curthread,uid,gid}.d: No longer expected
	to fail.
        * test/unittest/funcs/tst.inet_ntoa.d: Likewise.
	* test/demo/script/syscall.r: We know the expected results of
	this test now.
	* test/unittest/enum/err.D_UNKNOWN.RepeatIdentifiers.r: The
	error from this test has improved now we have CTF support.
	* test/unittest/offsetof/err.D_UNKNOWN.OffsetofNULL.r: Likewise.
	* test/unittest/types/err.D_UNKNOWN.dupenum.r: Likewise.
	* test/unittest/types/err.D_UNKNOWN.dupstruct.r: Likewise.

	* Makeconfig: Do not generate coverage datafiles for configure-
	test compilations.

2012-07-19  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build (errno.d): Pass errno.h through the preprocessor
	before feeding it to mkerrno.sh: do not transform \n into linefeeds.
	* libdtrace/mkerrno.sh: Rewrite, using awk to handle errnos defined in
	terms of other errnos.

2012-07-18  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_module.c (dt_module_load): Modules with no CTF data
	may have a one-byte dummy CTF section.

2012-07-03  Nick Alcock  <nick.alcock@oracle.com>

	The great dt_module revamp.

	* libdtrace/dt_symtab.h: New file, symbol table management.
	* libdtrace/dt_symtab.c: New file, implementation thereof.
	* libdtrace/Build: Add it.

	* libdtrace/dt_link.c (dt_symtab_lookup): Rename to...
	(dt_elf_symtab_lookup): ... this less confusing name.
	(process_obj): Adjust accordingly.

	* libdtrace/dt_string.c (strrstr): New function.
	* libdtrace/dt_string.h (strrstr): Prototype it.
	* Makeconfig: Provide it if not already available.

	* Makeoptions (coverage): Set LDFLAGS as well.

	* libdtrace/dt_impl.h (dtrace_hdl): Introduce dt_module_path.
	* libdtrace/dt_open.c (dt_vopen): Default it from /lib/modules/
	and the OS release.
	* libdtrace/dt_options.c (_dtrace_ctoptions): New 'modpath'
	compile-time option (though also used at runtime).
	(dt_opt_module_path): New.
	(dt_opt_rate): Quash compiler warning.

	* libdtrace/dtrace.h (DTRACE_O_NOSYS): Delete, irrelevant.
	Renumber later flags.
	(dtrace_update): Now returns an int.
	(dtrace_addr_range): New.
	(dtrace_addr_range_cmp): Likewise.
	(dtrace_objinfo): dto_text_va and dto_data_va are transformed
	into address ranges: dto_bss_va and dto_bss_size are dropped.
	(comment): Mention that address ranges need to be freed.

	* libdtrace/dt_error.c (EDT_CORRUPT_KALLSYMS): New error,
	reported when /proc/kallsyms is corrupt.
	(EDT_ELFCLASS): New error, reported when the ELF class is unknown.
	(EDT_OBJIO): New error, reported when object files are unreadable.

	* libdtrace/dt_impl.h: Introduce the errors here too.
	No longer include <sys/objfs.h> or <gelf.h>. Include <dt_symtab.h>.
	(dt_sym): Rename to...
	(dt_modsym): ... this, for clarity.  Adjust field names too.
	(dt_module): dm_*_va and dm_*_size changes as in the dtrace_objinfo,
	using address ranges rather than single addresses.  Emphasise which
	fields are only useful for userspace modules versus kernel moudules.
	Introduce dm_ctdata_name and dm_kernsyms. Drop dm_info.
	(dt_kern_path): New, module name -> filesystem path mapping for a
	kernel module.
	(DT_DM_BUILTIN): New flag indicating a built-in kernel module with
	no corresponding .ko file on disk.
	(dtrace_hdl): Introduce dt_ctf_elf, dt_ctf_ops, dt_kernpathlist,
	dt_kernpaths, dt_kernpathbuckets, dt_nkernpaths.

	* libdtrace/dt_open.c (dt_vopen): Initialize the kernel paths.
	dtrace_update() may now return an error.
	(dtrace_close): Destroy and free the kernel paths.

	* libdtrace/dt_symbol_modops.h (dt_module_symcomp): Adjust to
	accept a third argument rather than using the dt_module_strtab
	global variable.
	(dt_module_symsort): Use qsort_r(), not qsort(). Adjust for
	dt_sym_t -> dt_modsym_t rename.
	(dt_module_symname): Adjust likewise.

	* libdtrace/dt_module.c: Adjust for dt_sym_t -> dt_modsym_t rename.
	Remove redundant (void) casts.
	(dt_module_strtab): Deleted.
	(KSYM_NAME_MAX): New, derived from kernel/scripts/kallsyms.c.
	(dt_kern_path_create): New, create a kernel path.
	(dt_kern_path_destroy): New, destroy it.
	(dt_kern_path_lookup_by_name): New, find a pathname given a kernel
	module name.
	(dt_kern_path_update): New, find the mapping from module names
	to kernel paths.
	(dt_module_lookup_by_name): Allow 'genunix' as a compatibility
	alias for 'vmlinux'.
	(dt_module_update): Move ELF reading...
	(dt_module_init_elf): ... to this new function.  Built-in modules
	are read in once across all built-in modules, cached in dt_ctf_elf,
	then cloned from that.  Use ELF_C_READ_MMAP in elf_cntl() to work
	around elfutils bug.
	(dt_module_load): Now static.  Vary the CTF file name if this is a
	built-in module; store that varied name in a new field so that we
	can deallocate it later.  Do not try to load the string or symbol
	tables, set up the symchains or do anything else ELFish for kernel
	modules.
	(dt_module_unload): Now static. Don't bother checking for NULLity
	before freeing, free() does that itself.  Adjust for new
	dynamically-allocated fields and removed fields.  Free the ELF
	handle only for non-builtin modules, since for builtin modules
	that handle is shared.
	(dt_module_getctf): dt_module.dm_ops is NULL for kernel modules:
	this is the same as 64-bit.
	(dt_module_extern): Likewise.
	(dtrace_addr_range_cmp): New, compare a GElf_Addr to an address range.
	(dtrace_addr_range_sort_cmp): New sort an address range into order.
	(dtrace_addr_range_populating_cmp): Likewise, addresses just
	off the end but contiguous with a range are considered to be in the
	range (i.e. an open range).
	(dtrace_addr_range_find_populating): Find the range in which an
	address lies, if any, given a module and a text/data flag.
	(dtrace_addr_range_grow): Add a new text or data range for a
	module (growing the range array).
	(sym_type_to_info): New: given an nm(1)-style info field as
	seen in /proc/kallsyms or /proc/kallmodsyms, return an ELF
	st_info value.
	(dt_kern_module_init): New, initialize a new kernel dt_module.
	(dt_modsym_update): New, given a line in /proc/kallmodsyms
	representing a kernel symbol, create or extend a dt_module,
	its ranges, and its dm_kernsyms appropriately, skipping various
	symbols believed to be useless.
	(dtrace_update): This can now fail.  Remove Solaris /system/object-
	objfs-and-ELF scanning, instead sucking in /proc/kallmodsyms and
	passing each line to dt_modsym_update(), finally sorting its
	kernel symbol tables with dt_symtab_sort().  Rename the "genunix"
	module to "vmlinux".
	(dtrace_lookup_by_name): Kernel modules follow a new path,
	looking up the symbol in the dm_kernsyms for each module and
	synthesising an ELF object for it via dt_symbol_to_elfsym().
	(dtrace_lookup_by_addr): Likewise. bsearch() the address ranges
	rather than comparing dm_{text,data,bss}_va.
	(dt_module_info): dm_*_va and dm_*_size changes as in the
	dtrace_objinfo.
	* libdtrace/dt_module.h: dt_module_load() and dt_module_unload()
	are no longer public.  dt_kern_path_destroy() is now public.

	* libdtrace/dt_aggregate.c (dt_aggregate_mod): bsearch() the
	address ranges rather than comparing dm_text_va.

	* uts/common/sys/objfs.h: Deleted.

	* GNUmakefile: No longer specify 64-bitness of file I/O: it is
	redundant on x86-64 and breaks fts().

	* libdtrace/dt_ident.c (dt_idhash_destroy): Accept a NULL
	argument, like free().
	* libdtrace/dt_strtab.c (dt_strtab_destroy): Likewise.
	* libdtrace/dt_provider.c (dtrace_probe_iter): Quash compiler
	warning.

	* INCOMPATIBILITIES: Updated to mention the dtrace.h changes
	and the changes in population of dtrace_syminfo_t and GElf_Sym
	parameters for kernel symbols.

2012-06-20  Nick Alcock  <nick.alcock@oracle.com>

	* Makeconfig (CONFIG_H): Add missing path slash.

	* libdtrace/dt_module.c (dt_module_destroy): Unchain destroyed
	modules from the module hash.

2012-06-18  Nick Alcock  <nick.alcock@oracle.com>

	Add a crude symbol-checking infrastructure, like Autoconf's
	AC_CHECK_LIB.  Use it to check for elf_getshdrstrndx().

	* Makeconfig: New file.
	* GNUmakefile: Include it.  Search the objdir for generated header files.
	* Makefunctions: All C compilations depend on the config.h file.
	* README.build.system: Describe the new infrastructure briefly.

	* include/port.h: Include config.h and provide the new names for
	the obsolete elf_getshstrndx() and elf_getshdrnum() if necessary.
	* libdtrace/dt_module.c (dt_module_update): Use elf_getshdrstrndx():
	elf_getshstrndx() is obsolete.
	* libproc/Psymtab.c (build_fake_elf): Likewise.  Also use
	elf_getshdrnum() rather than elf_getshnum().
	(Pbuild_file_symtab): Likewise.

	Allow overriding of path to /proc.

	* libdtrace/dt_impl.h (dtrace_hdl): Add dt_procfs_path.
	* libdtrace/dt_open.c (_dtrace_defproc): Default value.
	(dt_vopen): Set the default.
	* libdtrace/dt_options.c (_dtrace_ctoptions): New 'procfspath'
	compile-time option (though also used at runtime).
	(dt_opt_procfs_path): New.
	* libproc/Pcontrol.c (Pset_procfs_path): New function.
	* libproc/libproc.h: Prototype it.

	* test/triggers/testprobe.c: Warning fix.

2012-06-14  Nick Alcock  <nick.alcock@oracle.com>

	Eliminate symbol-lookup duplication via macro-expansion.

	* libdtrace/dt_module.c (dt_module_syminit32, dt_module_syminit64)
	(dt_module_symcomp32, dt_module_symcomp64)
	(dt_module_symsort32, dt_module_symsort64)
	(dt_module_symname32, dt_module_symname64)
	(dt_module_symaddr32, dt_module_symaddr64):
	Merge and move into...

	* libdtrace/dt_symbol_modops.h (dt_module_syminit)
	(dt_module_symcomp, dt_module_symsort, dt_module_symname)
	(dt_module_symaddr): ... this new file.

	* libdtrace/dt_module.c: Include it repeatedly.

	Eliminate the concept of 'primary objects' and most mentions of
	the kernel runtime loader interface.

	* libdtrace/dt_ident.h (DT_IDFLG_PRIM): Deleted.
	* libdtrace/dt_parser.c (dt_node_inline): ... and from here...
	(dt_xcook_ident): ... and from here...
	* libdtrace/dt_as.c (dt_as_undef): ... and from here.
	(dt_as): DT_LINK_PRIMARY is gone.

	* libdtrace/dt_impl.h (DT_DM_PRIMARY): Deleted.
	(DT_LINK_PRIMARY): Likewise.
	(dtrace_hdl): Deleted dt_rtld.
	* libdtrace/dt_module.c (dt_module_info): Drop DT_DM_PRIMARY
	handling.
	(dt_module_update): Likewise.  Drop .info section parsing.
	(dtrace_update): Drop projid, taskid, and dt_rtld references.
	(dt_module_from_object): Drop DTRACE_OBJ_RTLD handling.
	* libdtrace/dt_options.c (dt_opt_linkmode): Drop the primary
	linkmode.
	* libdtrace/dtrace.h (DTRACE_OBJ_RTLD): Deleted.
	(DTRACE_OBJ_F_PRIMARY): Deleted.

	More project/task/zone/contract removal.

	* libdtrace/dt_open.c (_dtrace_macros): Drop projid and taskid.
	* libdtrace/ip.d.in: Drop cs_zoneid and all reference to zones.
	* libdtrace/procfs.d.in: Drop pr_taskid, pr_projid, pr_poolid,
	pr_zoneid, and pr_contract.

	* INCOMPATIBILITIES: Mention the libdtrace API differences and
	task/contract/zone/project removal.

2012-06-06  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_impl.h (dt_module): Purge dm_modid.
	* libdtrace/dt_module.c (dt_module_update): Likewise.
	(dtrace_symbol_type): Likewise.
	* libdtrace/dt_open.c (dt_vopen): Likewise.
	* libdtrace/dtrace.h (dtrace_objinfo): Purge dto_id too.

2012-05-18  Nick Alcock  <nick.alcock@oracle.com>

	The libctf split.

	* libctf/libctf.h: Delete, useless.
	* libdtrace/dt_decl.h: Include <sys/ctf_api.h> directly, instead
	of <libctf.h>.
	* libdtrace/dt_ident.h: Likewise.
	* libdtrace/dt_impl.h: Likewise.
	* libdtrace/dt_parser.h: Likewise.
	* libdtrace/dt_printf.h: Likewise.
	* libdtrace/dt_xlator.h: Likewise.
	* libproc/Pcontrol.h: Likewise.
	* libproc/libproc.h: Likewise.

	* .gitmodules: New: libdtrace-ctf is now an optional git
	submodule.

	* libctf/*.c, libctf/*.h: Moved into...
	* libdtrace-ctf: ... the new submodule (and git repository).
	* libctf/GNUmakefile: Likewise.
	* uts/common/sys/ctf.h: Likewise.
	* uts/common/sys/ctf_api.h: Likewise.
	* libctf/Build: Likewise, with changes for shared library build,
	and optional integrated-into-dtrace build.
	* libdtrace-ctf.ver: Likewise with this new version script.
	* uts/Build (HEADERS_INSTALL): Drop the CTF header files.

	* libctf/llib-lctf: Delete, lint libraries are obsolete.
	* uts/common/sys/ctfs.h: Delete, we do not have an in-kernel CTF
	filesystem.
	* uts/common/sys/ctfs_impl.h: Likewise.
	* uts/common/sys/dtrace_types.h: Migrate some types into
	<sys/ctf_types.h> in the submodule.  Drop a bunch of
	kernel-only declarations, declarations of stuff provided by Linux
	for years, and declarations of stuff in C for years.

	* GNUmakefile (PROJECT): New, name this project (used by
	libdtrace-ctf Build files to detect building as part of dtrace).
	(warnings): Fix the spelling of DTrace.
	(INVARIANT_CFLAGS): -DCTF_OLD_VERSIONS is only needed when
	building libctf itself, drop from global flags.
	(CPPFLAGS): If we have libdtrace-ctf as an initialized submodule,
	point the header search path into it.

	* dtrace-utils.spec: Require libdtrace.ctf (and zlib, omitted
	earlier by mistake).  Other tiny cleanups.

	* libdtrace/Build (libdtrace-build_CPPFLAGS): No longer need
	-Ilibctf.
	(LIBS): Delete, no static library is required.
	(libdtrace_LIBS): Depend on -ldtrace-ctf. Look in the objdir for
	libraries (in case of a build with an initialized submodule).
	(libdtrace_LIBSOURCES): Drop libctf.
	(libdtrace_SECONDARY): Likewise.

	* libproc/Build (libproc_CPPFLAGS): No longer need -Ilibctf.
	* cmd/Build (dtrace_CPPFLAGS): Likewise.
	(dtrace_DEPS): No longer need libctf.a.
	(dtrace_LIBS): Link against -ldtrace-ctf rather than -lctf.
	* test/utils/Build: Likewise.

	* test/triggers/.gitignore: Ignore everything other than C files,
	a single shell-script-based trigger and the Build file. (In
	particular, ignore compiled triggers.)

	* GNUmakefile (gtags): GNU GLOBAL support.
	(tags): Fix filename.
	(realclean): Like clean, only removes tags files too.

	* Makefunctions (describe-install-target): Strip the
	path from the name.
	(lib-template): Expand the TARGET in the description of the built
	library.
	* libdtrace/Build (install): Strip the path from the installed
	object descriptions.
	* uts/Build (install): Likewise.

2012-04-17  Nick Alcock  <nick.alcock@oracle.com>

	* libctf/ctf_create.c (ctf_add_member): Re-express in terms
	of...
	(ctf_add_member_offset): ... this new function, which can
	explicitly specify the offset of members.
	* libctf/ctf_lib.c (ctf_gzwrite): New, compressed writeout.

	* libctf_ctf_impl.h: Migrate CTF errors into...
	* uts/common/sys/ctf_api.h: ... here. Add new functions.

	* uts/common/sys/ctf.h: Note that the CTF library does not track
	parent/child relationships at all.

2012-04-16  Nick Alcock  <nick.alcock@oracle.com>

	Silent-by-default build.

	* Makefunctions (describe-target): New, describe a target when silent
	(describe-install-target): Likewise, for installation.
	(cc-template): Use it.
	(build-lib-template): Likewise.
	(lib-template): Likewise.
	(shlib-template) Likewise.
	(cmd-template): Likewise.

	* Makeoptions (verbose): New option: silence make when turned off.
	(help): Document it.
	* README.build-system: Likewise.

	* GNUmakefile: Document custom targets.
	* Build (install): Document this target.
	* cmd/Build (install): Likewise.
	* uts/Build (install): Likewise. Split out list of installed files...
	(HEADERS_INSTALL): ... into this new variable.
	* libdtrace/Build: Document custom targets and install target.

2012-03-21  Nick Alcock  <nick.alcock@oracle.com>

	* GNUmakefile: Split out checking targets into...
	* Makecheck: ... this new makefile fragment. Comment it up.
	(check-module-loading): New target, load the modules which 'make
	check' would load, for load-but-no-run checking.
	(check-probe-all-syscalls, check-installed-probe-all-syscalls):
	Check a null probe of all syscalls with the build and installed
	dtrace.
	(check-probe-all-syscalls-internal): Internal target, doing the
	work of the above two.

2012-03-20  Nick Alcock  <nick.alcock@oracle.com>

	Changes for easier stress-testing.

	* GNUmakefile (check): Reformulate in terms of check-verbose.
	(check-installed): Reformulate in terms of check-installed-verbose.
	(check-verbose): Pass in RUNTESTFLAGS.
	(check-installed-verbose): Likewise.
	(check-*-stress): New targets for testing in parallel with stress
	tests: skips stressful tests that allocate a lot of memory, and
	avoids comparisons.

	* runtest.sh: New --testsuites= option, constraining test execution
	to specific subdirectories of test/.  New --no-comparison option,
	suppressing comparison of expected results and silently converting
	XPASSes into PASSes.

	* test/{act,buf,builtin,dt_test,dtrace,fbt,intro,io,ip,lockstate,out,
	proc,profile,sched,script,sdt,spec,struct,sysinfo}/*: Move under
	test/demo.
	* test/{dif,regression}/*: Move under test/unittest.
	* test/unittest/buffering/*.resize*: Move under stress/buffering.
	* test/{demo,unittest,stress}/README: New, describe these testsuites.

2012-03-19  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace-utils.spec: Call ldconfig when necessary.
	* GNUmakefile: Trunk version number.

2012-03-13  Nick Alcock  <nick.alcock@oracle.com>

	* NEWS: Mention shared library support.
	* GNUmakefile: This is v0.2.5.
	* dtrace-utils.spec: Likewise.

2012-03-07  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build (install): Install a usable libdtrace.a and dtrace.h.
	* dtrace-utils.spec (%files): Adjusted.
	* README.build-system: Mention the lack of automated install targets.

2012-02-15  Nick Alcock  <nick.alcock@oracle.com>

	* NEWS: New, mention changes.
	* Build: Install it.

	* README: Updated.
	* GNUmakefile: This is v0.2.4.
	* dtrace-utils.spec: Likewise.

2012-02-09  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Detect failures due to out-of-memory conditions, and
	turn them into relatively easy-to-ignore XFAILs.

	* dtrace-utils.spec: Release.

2012-03-10  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build: Overwrite already-existing stale shared-
	library symlinks.
	* dtrace-utils.spec: We have a .so now, not a .a.

2012-03-08  Nick Alcock  <nick.alcock@oracle.com>

	Shared library support.

	* README.build-system: Document it.

	* Makerules (libs): Rename to...
	(build-libs): ... this.  Adjust for _TARGET suffix-derivation.
	(libs): New.  Build installable static libraries.
	(shlibs): New. Build shared libraries.
	(PHONIES): Updated.
	(TARGETS): Likewise.

	* Makefunctions (cc-template): Allow specification of call-
	dependent flags.
	(lib-template): Rename to...
	(build-lib-template): ... this.  Adjust for _TARGET suffix-
	derivation.  Prefix the library name with build- automatically.
	Pass in -fPIC to cc-template.
	(lib-template): New.  Build an .a from a set of build libraries (or,
	rather, from the same set of sources as those libraries were built
	from).
	(shlib-template): New.  Build an .so, with optional soname and
	version map file, from a set of build libraries, incorporating
	everything in those libraries not listed as secondaries.

	* libproc/Build: This is now a build library only (as no
	non-library uses it).  Adjust for _TARGET suffix-derivation.
	* libctf/Build: This is a build library as well as static library.
	Adjust for _TARGET suffix-derivation.
	* libport/Build: Likewise.
	* cmd/Build: Link against them, and libdtrace.  Do not link against
	all of libdtrace's library dependencies.
	* libdtrace/Build (libdtrace_*): Rename to...
	(libdtrace-build_*): ... this, to avoid confusion with the
	installable library.
	(SHLIBS): libdtrace is now an installable shared library.
	(libdtrace_LIBS): Imported deps from cmd/Build.
	(libdtrace_VERSION): This is version 0.0.0.
	(libdtrace_SONAME): Likewise.
	(libdtrace_VERSCRIPT): Point at the version script.
	(libdtrace_LIBSOURCES): Point at the build libraries that go into
	this shared library.
	(libdtrace_SECONDARY): Only libdtrace must be included in toto.
	(install): Install the shared library, not a kludged-together
	static library.

	* libdtrace/mapfile-vers: Rename to...
	* libdtrace/libdtrace.ver: ... this.  Remove obsolescent
	README.mapfiles notice.  Change version name to no longer mention
	Sun.

	* runtest.sh (first_dtest_dir): Set LD_LIBRARY_PATH when testing a
	non-installed dtrace.

2012-03-08  Nick Alcock  <nick.alcock@oracle.com>

	* GNUmakefile (PHONIES): Add missing check-installed targets.
	* Makeoptions (PHONIES): Add help target.
	* Makerules (PHONIES): Add triggers.

2012-03-07  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build (install): Install a usable libdtrace.a and dtrace.h.
	* dtrace.utils.spec (%files): Adjusted.
	* README.build-system: Mention the lack of automated install targets.

2012-02-09  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Detect failures due to out-of-memory conditions, and
	turn them into relatively easy-to-ignore XFAILs.

2012-02-09  Nick Alcock  <nick.alcock@oracle.com>

	Fixes for improved test reproducibility under load.

	* test/triggers/open.c: New trigger, call open().
	* test/triggers/Build (TRIGGERS): Build it.
	* test/unittest/speculation/tst.NoSpecBuffer.d: Use it.

	* test/spec/spec.d: Check the pid everywhere.
	* test/unittest/drops/drp.DTRACEDROP.STKSTROVERFLOW.d: Check that
	the process is ours.
	* test/raise/tst.raise1.d: Likewise.  Wait longer.
	* test/raise/tst.raise2.d: Likewise.  Wait longer.
	* test/raise/tst.raise3.d: Likewise.  Wait longer.
	* test/raise/tst.raise1.r: We were catching the pre-trigger exit
	before: regenerate with correct results.
	* test/raise/tst.raise2.r: Likewise.
	* test/raise/tst.raise3.r: Likewise.
	* test/raise/test.options: The raise() action is not yet implemented:
	these tests are expected to fail.

	* runtest.sh: .x files now return 0 (test), 1 (XFAIL) or 2 (skip).
	* test/unittest/buffering/tst.resize1.x: New, skip if loadavg > 10.
	* test/unittest/buffering/tst.resize2.x: Likewise.
	* test/unittest/buffering/tst.resize3.x: Likewise.

2012-02-09  Nick Alcock  <nick.alcock@oracle.com>

	* uts/common/sys/dtrace.h (DTRACEOPT_QUIETRESIZE): New.
	(DTRACEOPT_MAX): Adjust.

	* libdtrace/dt_options.c (_dtrace_drtoptions): Set it
	when "quietresize" is requested...
	* cmd/dtrace.c (main): ... and here, when -t is on.
	(go): Do not emit buffer-resizing warnings in this case.

	* test/unittest/buffering/err.resize1.d: Turn it off explicitly.
	* test/unittest/buffering/err.resize2.d: Likewise.
	* test/unittest/buffering/err.resize3.d: Likewise.
	* test/unittest/buffering/tst.resize1.d: Likewise.
	* test/unittest/buffering/tst.resize2.d: Likewise.
	* test/unittest/buffering/tst.resize3.d: Likewise.

2012-02-09  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build: Relink drti.o correctly if headers change.
	Do not fail if the drti.o symlink already exists.

2012-02-07  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build: Install .d files into a subdirectory of the
	objdir, not the builddir.  Symlink drti.o in there too.
	* runtest.sh: Pass that new location to dtrace.

	* cmd/dtrace.c (main): Set the syslibdir from the value of the -t
	option, rather than setting to a hardwired value.

	* libdtrace/dt_impl.h (_dtrace_libdir): Remove: its value is fixed at
	compile-time, so it should not be used for anything other than setting a
	default.
	* libdtrace/dt_link.c (dtrace_program_link): Use the item at the head of
	the dt_lib_path, rather than the hardwired _dtrace_libdir.
	* libdtrace/dt_open.c (_dtrace_libdir): Make static.
	(_dtrace_defcpp): Likewise.
	(_dtrace_defld): Likewise.
	(_dtrace_provdir): Likewise.

2012-02-06  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace-utils.spec: Set version number for release.
	* test/unittest/buffering/err.resize*.d: Boost the timeout.
	* test/unittest/buffering/tst.resize*.d: Likewise.
	* test/unittest/buffering/tst.resize*.r: Adjust expected results.

2012-02-02  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_impl.h: Use PATH_MAX, not MAXPATHLEN.
	Give it a reasonably large value if undefined.
	* libdtrace/dt_cc.c (dt_lib_depend_add): Likewise.
	* libdtrace/dt_module.c (dt_module_update): Likewise.
	* libdtrace/dt_pid.c (dt_pid_fix_mod): Likewise.
	* libdtrace/dt_pragma.c (dt_pragma_depends): Likewise.

2012-01-31  Nick Alcock  <nick.alcock@oracle.com>

	* cmd/dtrace.c (main): New argument for -t option, disabling
	library path changes for testing of installed dtrace.
	* runtest.sh (FORCE_OUT): Use it.

	* dtrace.spec: Rename to...
	* dtrace-utils.spec: ... this, and update.

2012-01-16  Nick Alcock  <nick.alcock@oracle.com>

	* test/regression/tst.exit_panic.d: New test for crash on
	destructive exit.
	* test/unittest/drops/drp.DTRACEDROP_STKSTROVERFLOW.d: No longer
	expected to fail.

2012-01-12  Nick Alcock  <nick.alcock@oracle.com>

	* cmd/dtrace.c (main): Don't emit the inter-loop blank line
	when testing.

	* test/dt_test/aggcount.r: Adjust accordingly.
	* test/dtrace/end.r: Likewise.
	* test/dtrace/error.r: Likewise.
	* test/intro/counter.r: Likewise.
	* test/intro/trussrw.r: Likewise.
	* test/unittest/drops/drp.DTRACEDROP_PRINCIPAL.r: Likewise.

2012-01-11  Nick Alcock  <nick.alcock@oracle.com>

	* INCOMPATIBILITIES: sdt is implemented now: mention fbt instead.

2012-01-11  Nick Alcock  <nick.alcock@oracle.com>

	Testsuite cleanups and new bugs.

	* COMMANDLINE-OPTIONS: -c and ranges in -i are broken.

	* test/builtin/curthread.d: XFAIL: needs CTF.
	* test/builtin/gid.d: Likewise.
	* test/builtin/uid.d: Likewise.
	* test/unittest/buffering/tst.ring3.d: Likewise.

	* test/dtrace/end.d: Don't rely on racy timeout timings.
	* test/dtrace/end.r: Adjust accordingly.

	* test/intro/counter.d: Print consistent output.

	* test/intro/trussrw.d: Don't trace read()/write() generated by the
	inside of ld.so.
	* test/intro/trussrw.r: Adjust accordingly.
	* test/triggers/mmap.c: Likewise.

	* test/out/printa.d: Use the tick-n provider, which exists.

	* test/unittest/buffering/tst.ring1.r: Adjust expected results.
	* test/unittest/funcs/err.badbcopy4.r: Likewise.
	* test/unittest/funcs/err.badbcopy5.r: Likewise.
	* test/unittest/pointers/err.BadAlign.r: Likewise.

	* test/unittest/funcs/tst.index.r: Fix Perl path typo.

	* test/unittest/printf/tst.basics.d: Don't try to print a wchar_t.
	* test/unittest/printf/tst.basics.r: Adjust results accordingly.

	* test/unittest/safety/tst.copyin.d: Skip until containing
	directory's @@xfail is revoked.

	* test/unittest/safety/test.options: Describe the cause of failure
	better.

2012-01-10  Nick Alcock  <nick.alcock@oracle.com>

	* test/modules: Add sdt.

2011-12-04  Nick Alcock <nick.alcock@oracle.com>

	* dtrace.spec: Install /usr/include/sys/dtrace_types.h.

2011-11-23  Pearly Zhao <pearly.zhao@oracle.com>

	* include/sys/link.h: Remove.
	* include/rtld_db.h: Include link.h.
	* include/sys/machelf.h: Likewise.
	* libdtrace/drti.c: Delare Link_map.
	* libproc/Psymtab.c: Remove the cases that do not exist on Linux.
	* libproc/Psymtab_machelf32.c: Likewise.

2011-11-03  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Document --quiet and --verbose.

2011-11-01  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Kill dtrace with the TIMEOUTSIG, not just the sleeper.
	Kill whole process groups at once, not single processes.

2011-11-01  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Only look for dtraces matching the current kernel.
	Cater for shell nullglob when checking for lack of dtraces.
	Fix printout of dtrace name.

2011-10-28  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh (run_with_timeout): Detect dtraces that resist the
	timeout kill and terminate the test.
	(unload_modules): Do not hide errors at post-test module unload time.
	* test/modules: Load dtrace before its depenedent modules, not afterwards.

2011-10-06  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/*.d*: Remove CDDL.
	* uts/common/sys/*.h (installed only): Likewise.
	* dtrace.spec: Likewise.

2011-10-05  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Add --use-installed option, to use a dtrace
	installed to /usr/sbin/dtrace rather than one in the source tree.

	* test/triggers/Build (trigger-template): Append trigger names to
	new TRIGGERS variable.
	* Makerules (triggers): New target building only triggers.
	* GNUmakefile (check-installed): New target, depending on triggers.
	(check-installed-verbose): Likewise.

2011-10-03  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace.spec (BuildRequires): Depend on kernel-headers,
	glibc-headers, byacc, flex, and zlib-devel, to allow successful
	building on bare systems.

	(%files): Manpage filenames must be gzipped.
	(%install): Pass VERSION at install-time too.  Don't install the
	binary twice.

2011-10-03  Nick Alcock  <nick.alcock@oracle.com>

	* README: New.
	* cmd/dtrace.1: Likewise, from OpenSolaris 2009.6.
	* INCOMPATIBILITIES: Be less emphatic: we don't know how to solve
	some of these problems yet.

	* GNUmakefile (VERSION): New.
	(DOCDIR): New, uses VERSION.
	(MANDIR): New.
	(all): Include a local Build as well.
	* dtrace.spec: Pass in VERSION. Mention new files.
	* Build: New, install README and INCOMPATIBILITIES.
	* cmd/Build (install): Install cmd/dtrace.1 too.

	* Makefunctions: Fix comment typo.

2011-10-03  Nick Alcock  <nick.alcock@oracle.com>

	* INCOMPATIBILITIES (Likelihood):
	* Makefunctions (cc-dependencies):

2011-10-02  Nick Alcock  <nick.alcock@oracle.com>

	* GNUmakefile: Ensure $(BITNESS) is defined before (INVARIANT_CFLAGS).

2011-10-01  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace.spec (%changelog): Sort correctly.

2011-09-30  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/Build (libproc_SOURCES): Dropped dt_proc.c.
	* libproc/dt_proc.c: Deleted.
	(ps_getpid): Renamed to Pgetpid() and moved to...
	* libproc/Pcontrol.c (Pgetpid): ... here.
	* libproc/libproc.h: Renamed ps_getpid() to Pgetpid().
	* libproc/mapfile-vers: Dropped a lot of nonexistent functions.

	* libdtrace/dt_pid.c: Renamed calls.
	* libdtrace/dt_proc.c: Likewise.

	* libdtrace/i386/dt_isadep.c: Likewise.

2011-09-29  Nick Alcock  <nick.alcock@oracle.com>

	* cmd/dtrace.c (g_oflags): Force to the equivalent of -64.
	* runtest.sh: Fix bug causing runtest.sum and runtest.log to be
	incomplete in --quiet mode.

2011-09-28  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace.spec: Fix package name to dtrace-utils.

2011-09-26  Nick Alcock  <nick.alcock@oracle.com>

	* INCOMPATIBILITIES: Document lack of userspace tracing, lack of
	traceback in ustack(), sand note future problems with local tracing even
	when that is fixed.

2011-09-22  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/Psymtab.c (Paddr_to_map): Temporarily stub out.
	(Plmid_to_map): Likewise.
	(i_Pxlookup_by_addr): Likewise.
	(Pxlookup_by_name): Likewise.
	(Pobjname): Likewise.

2011-09-22  Nick Alcock  <nick.alcock@oracle.com>

	* GNUmakefile (TAGS): New.
	(tags): Likewise.
	(PHONIES): Mark targets in the top-level makefile as phony.

	* runtest.sh (TIMEOUTSIG): New, allow sending a non-kill signal
	to dtrace on timeout.

	* GNUmakefile: Add missing CDDL header.
	* Makefunctions: Likewise.
	* Makerules: Likewise.
	* test/utils/Build: Likewise.
	* test/triggers/Build: Likewise.
	* runtest.sh: Likewise.
	* libproc/Build: Likewise.
	* libport/Build: Likewise.
	* libdtrace/Build: Likewise.
	* libctf/Build: Likewise.
	* cmd/Build: Likewise.
	* test/triggers/readwholedir.c: Fix copyright date.

	* test/mkemo.pl: Delete, no longer used.
	* test/unittest/tick-n/*: These are not xfail.

2011-09-19  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/Build (working-dlibs): Depend on distinct rules for each
	working dlib.
	* dtrace.spec (files): Add the headers.

2011-09-16  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Look for Makefunctions, not .mailmap, to find
	top-of-tree.

2011-09-16  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Support recursive option searching up to the test/
	root.  Call them options consistently, not flags.  Try to catch
	coredumps even if core_pattern or core_uses_pid are set, and even
	if the coredump ulimit is small.  Support --badddof.  Support
	shell comment-quoted test options.  Export $dt_flags to children.
	Support .sh script-driven tests.  Tests named tst.*, err.* and
	drp.* are run as if with /* @@trigger:none */.  Tests named
	err.* assume that exitcode 1 is success.  Tests named err.D_*
	are run with -xerrtags.  Tests named drp.*.d are run with
	-xdroptags.

	* test/utils/badioctl.c: New tool, spray random junk at the DTrace
	device.
	* test/utils/baddof.c: New tool, compile D to DOF and repeatedly
	corrupt it and hand it to the DTrace device.
	* test/utils/Build: New, build them.

	test/{fbt,io,ip,lockstat,proc,sched,sdt,vminfo}/test.options:
	New, @@xfail these directories.
	test/{fbt,io,ip,lockstat,proc,sched,sdt,vminfo}/*.d: Strip out
	individual @@xfail markers.

	* GNUmakefile (INCLUDEDIR): New, include directory.
	* uts/Build: New, install include files in uts/common/sys.

	* test/triggers/, test/unittest, test/utils/include-test.d: Import
	OpenSolaris dtrace testsuite.

2011-09-15  Nick Alcock  <nick.alcock@oracle.com>

	* cmd/dtrace.c (main): When testing is active, look in
	libdtrace/dlibs for .d libraries.
	(usage): Vague up the -t option description.

	* libdtrace/Build (WORKING_DLIBS): New, names of those .d
	libraries that work.
	(install): Install only those libraries.
	(working-dlibs): New, push them into the new dlibs/ subdir.
	(clean): Clean up that subdir.

2011-09-15  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_cc.c (dt_preproc): Use C89 mode, not GNU89.
	* libdtrace/dt_open.c (dt_vopen): Undefine __GNUC__.

2011-09-15  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_open.c (dt_vopen): Don't pass in -D options with
	spaces in them. Pass in __linux, not __sun.

	* libdtrace/dt_impl.h (DT_STDC_XC): Drop.
	(DT_STDC_XT): Likewise.
	* libdtrace/dt_cc.c (dt_preproc): Use GNU cpp options.
	* libdtrace/dt_options.c (dt_opt_stdc): Everything but -Xs now activates
	DT_STDC_XA.

	* COMMANDLINE-OPTIONS (Notations): Document change in behaviour of -X[atcs].
	* INCOMPATIBILITIES: Likewise.

2011-09-15  Nick Alcock  <nick.alcock@oracle.com>

	* test/triggers/mmap.c: Use tmpfile(), not open(). Reindent.
	* test/triggers/testprobe.c (main): Tiny formatting fix.

2011-09-15  Shujing Zhao  <pearly.zhao@oracle.com>

	* test/intro/trussrw.d: Adjust: fix copyright date, assign trigger.
	* test/intro/trussrw.r: Expected results.
	* test/intro/trussrw.r.p: Expected-results postprocessor.

	* test/triggers/mmap.c: Change the tmp file and clean.

2011-09-14  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Support /* @@trigger: none */ to run untriggered tests.
	Run tests in a consistent order.

2011-09-14  Shujing Zhao  <pearly.zhao@oracle.com>

	* test/dtrace/begin.d: Adjust: fix copyright date, assign trigger. Fix
	predicate.
	* test/dtrace/begin.r: Expected results.

	* test/triggers/mmap.c: New trigger to call syscall mmap.
	* test/triggers/Build (TRIGGERS): Build it.

2011-09-13  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Provide coverage tracing of module initialization
	and shutdown too.  Fix trigger PID typo.
	* test/modules: Add dtrace now that we are unloading and cannot
	rely on module dependency chasing.

2011-09-12  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Introduce quiet mode, producing minimal output.
	* GNUmakefile (check): Run tests in quiet mode.
	(check-verbose): New target providing verbose testing.

2011-09-09  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Stop @@xfail from hanging runtest. Strip trailing
	spaces off the xfail reason.

	* test/intro/rwtime.r.p: Make a !#/usr/bin/sed script.
	Erase C comments. $1 is not meaningful in sed scripts;
	use s// instead.

	* test/act/time.d: Use the same format for date(1) output as
	printf ("%Y") does.
	* test/act/time.r.p: New postprocessor, detect and mark
	identical walltimestamp and date output.
	* test/act/time.r: New, postprocessed results.

	* test/script/syscall.r: Fake results to ensure that result
	comparison fails (this test is known to fail right now).
	* test/struct/spec.r: likewise (though this failure is expected).

	* test/dtrace/error.r: Expected results for error.d.

	* test/vars/clause.d: Strip out pointless linefeeds.
	* test/vars/clause.r: Expected results.
	* test/vars/clause.t: New (fake) trigger, /bin/true as this D
	script runs on its own.
	* test/act/time.t: Likewise.
	* test/dtrace/error.t: Likewise.
	* test/struct/spec.t: Likewise.

	* test/struct/kstat.t: Define this, instead of...
	* test/struct/kstat.d: ... using a $(pidof ...) here, which fails
	unless someone has already started the process.

	Also, mark a lot of tests as XFAIL.

2011-09-09  Shujing Zhao  <pearly.zhao@oracle.com>

	* test/script/tracewrite.d: Adjust: fix copyright date, assign
	trigger.
	* test/script/tracewrite.r: Expected results.

	* test/intro/rwtime.d: Adjust: fix copyright date, assign trigger.
	* test/intro/rwtime.r.p: Expected-results postprocessor.
	* test/intro/rwtime.r: Expected results.

2011-09-08  Nick Alcock  <nick.alcock@oracle.com>

	* test/struct/rwinfo.d: Adjust: fix copyright date, assign
	trigger, report if elapsed time >0ns rather than emitting the
	(highly variable) actual time.
	* test/struct/rwinfo.r: Expected results.

	* test/triggers/readwholedir.c: New trigger, read all .d files in
	the trigger directory in consistent order using chunks as close to
	4Kb as possible, and write them to a temporary file in chunks of
	the same size.
	* test/triggers/Build (TRIGGERS): Build it.

	* test/triggers/testprobe.c: Add CDDL header.

2011-09-08  Nick Alcock  <nick.alcock@oracle.com>

	* cmd/dtrace.c: New -t switch, turning off CPU and ID output for
	reproducible test results.
	(usage): Document it.
	(chew): Use it.
	(main): Set it.  Mark options with + rather than contaminating
	child environments with POSIXLY_CORRECT.

	* runtest.sh: Use it.  Rip out the awk-based results
	postprocessor.  Always use the C collation locale.  Ensure that we
	kill dtrace and trigger processes on SIGINT. $_pid is now the
	trigger PID (manually expanded, left unexpanded at '$_pid' if
	there is no trigger).

	* test/*/*.r: Adjust for removal of postprocessor.

2011-09-06  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Automatically overwrite .r files if --capture-expected
	is on and specific tests are named on the command line.  Translate
	.r files named on the command line into their corresponding .d files.

2011-09-02  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh (first_dtest_dir): Segregate stderr output from
	dtrace into a separate section of the output delineated by
	-- @@stderr --.
	* test/**/*.r: Fix up expected results.

2011-09-01  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_dis.c (dt_dis_stmts): Do not loop over the actions
	list.

	* runtest.sh: Emit regression test logs to the right directory.

2011-08-29  Shujing Zhao  <pearly.zhao@oracle.com>

	* runtest.sh: Fix the error when process postprocessor.

2011-08-24  Shujing Zhao  <pearly.zhao@oracle.com>

	* runtest.sh: Fix the typo of runtest-opts.

2011-08-19  Shujing Zhao  <pearly.zhao@oracle.com>

	* runtest.sh: Optimize postprocessor and increase TIMEOUT to 11 since
	some test cases need 10 seconds to finish.

2011-08-09  Nick Alcock  <nick.alcock@oracle.com>

	* GNUmakefile (check): New target.
	* runtest.sh: Exit nonzero on failure.

2011-08-08  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Drop userspace test coverage info into the coverage/
	subdirectory of the test logdir.  Emit test coverage info into the
	logfile and sumfile. Zero test coverage counters.
	* test/.gitignore: New, ignore the log/ subdirectory.

	* README.build-system (name_NOCFLAGS): New, filter out unwanted
	CFLAGS from a target.
	* Makefunctions (cc-dependencies): Implement it.
	* test/triggers/Build (TRIGGERS): Use it to filter out test coverage
	info from triggers.

2011-08-02  Nick Alcock  <nick.alcock@oracle.com>

	test/triggers/testprobe.c: New test script to fire the dt_test
	dtrace test provider's test probe.
	test/triggers/Build: Link it.
	test/dt_test/fired.d: Use it.
	test/dt_test/fired.r: Expected results.

	test/struct/kstat.d: No longer use runtest-opts-override, as it no
	longer exists.

	runtest.sh: .x files return nonzero if failure is expected, not
	zero.

2011-08-02  Nick Alcock  <nick.alcock@oracle.com>

	runtest.sh: Support triggers (in @@trigger options and .t files)
	and a new --execute option.  Postprocess CPU and probe IDs out of
	expected results.  Fix use of call_with_timeout (now named
	run_with_timeout) in cheap subshells (not requiring shell
	reinitialization).  Don't leak monitor state out of
	call_with_timeout.  Fix PASS/FAIL appearance bugs.

	test/triggers/Build: New file, build all named TRIGGERS,
	symlink them into test/triggers for the testsuite, and
	clean them up on 'make clean'.

	test/Build: New file, simply run test/triggers/Build.

2011-08-02  Nick Alcock  <nick.alcock@oracle.com>

	Makerules: No longer fail if CMDS contains more than one word.

	Makefunctions: Support post-linkage actions.
	README.build-system: Document them.

2011-08-02  Nick Alcock  <nick.alcock@oracle.com>

	More testsuite changes.

	runtest.sh: Support test logging, test timeouts, automatic diffs,
	expected-results postprocessing and capturing, D script
	preprocessing, and programmable expected-failure support. Refactor
	to reduce code repetition.
	GNUmakefile: Clean up test/log too.

2011-07-28  Shujing Zhao  <pearly.zhao@oracle.com>

	* test/dt_test/fired.d: New test case to test dt_test.

2011-07-18  Nick Alcock  <nick.alcock@oracle.com>

	Testsuite remodel.

	* demo/*: Rename to...
	* test/*: ... this.

	* runtest.sh: Migrate dt_flag setting out of this file:
	make data-driven, from the .d files themselves.
	Drop hardwired dtrace -e -p $pid-without-.d-file
	invocation of dtrace when regression testing was off.

	* test/buf/ring.d: Migrate options from runtest.sh.
	* test/intro/rwtime.d: Likewise.
	* test/intro/trussrw.d: Likewise.
	* test/profile/profpri.d: Likewise.
	* test/sched/pritime.d: Likewise.
	* test/sched/whererun.d: Likewise.
	* test/struct/rwinfo.d: Likewise.
	* test/user/badopen.d: Likewise.
	* test/user/errorpath.d: Likewise.
	* test/user/libc.d: Likewise.
	* test/user/userfunc.d: Likewise.
	* test/struct/kstat.d: Likewise (using -override).

	* test/script/tracewrite.d: Likewise. Move #! line to the right
	place.
	* test/script/interp.d: Move #! line to the right place.
	* test/spec/specopen.d: Likewise.

2011-07-15  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Turn off coverage analysis if no info is present.
	Use the absence of .gcno files as proof of this before the run,
	and .gcda afterwards.

2011-07-14  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Add kernel testing support. Eliminate
	extraneous output on stdout. Move all coverage testing info
	into one directory under build-*/ or the kernel build tree.
	* runtest.conf.example: New, configuration file for runtest.

2011-07-14  Nick Alcock  <nick.alcock@oracle.com>

	Test coverage.

	* GNUmakefile (LDFLAGS): New.
	Include Makeoptions for option processing.
	* Makeoptions: New, provide debugging and test coverage support.
	* runtest.sh: Automatically run lcov to generate HTML coverage
	info if coverage statistics are available.

2011-07-14  Shujing Zhao  <pearly.zhao@oracle.com>

	* uts/common/sys/dtrace.h (dtrace_difo_t): Add a member
	orig_dtdo_rtype to track the return type.
	* libdtrace/dt_as.c (dt_as): Keep the return type.
	* libdtrace/dt_dis.c (dt_dis_action): Get the type information from
	orig_dtdo_rtype.

2011-07-11  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace.spec (build): Parallelize by default.

2011-07-08  Nick Alcock  <nick.alcock@oracle.com>

	* GNUmakefile: Slight ordering improvements.
	* GNUmakefile (TARGETS): Blank at first...
	* Makerules: ... append to it here.

2011-07-07  Nick Alcock  <nick.alcock@oracle.com>

	* Makefunctions: Make compatible with GNU make 3.81.

2011-07-07  Nick Alcock  <nick.alcock@oracle.com>

	Major build system remodel.

	* README.build-system: Document it.
	* Makefile: Renamed to...
	* GNUmakefile: this to indicate GNU Make specificity. Nearly
	completely rewritten.
	* Makefunctions, Makerules: New.
	* cmd/Build, libctf/Build, libproc/Build, libport/Build: New.
	* libdtrace/makefile: Rename to...
	* libdtrace/Build: ... this, ripping out all C-code-specific rules
	and converting to nonrecursive form.
	* cmd/GNUmakefile, libctf/GNUmakefile, libdtrace/GNUmakefile,
	libport/GNUmakefile, libproc/GNUmakefile: New stubs calling the
	top-level makefile.
	* libproc/common/*: Move to libproc/.
	* common/ctf/*: Move to libctf/.
	* common/dis/*: Move to libdtrace/i386/.
	* makefile, cmd/makefile, libctf/makefile, libdtrace/makefile,
	libport/makefile, libproc/makefile: Removed.
	* demo/Makefile, libdtrace/Makefile, libdtrace/Makefile.com,
	libdtrace/amd64/Makefile, libdtrace/i386/Makefile: Removed.
	* libdtrace/mkerrno.sh, libdtrace/mksignal.sh: Make executable.

2011-07-07  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/sys/elf_amd64.h: Remove AMD x86-64 relocations.

2011-07-06  Nick Alcock  <nick.alcock@oracle.com>

	* makefile (COMPILE.cpp): Rename to...
	(COMPILE.preprocess): ... this.
	* libdtrace/makefile: Adjust accordingly.

2011-06-29  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_proc.c (dt_proc_control): Improve comments.
	* (dt_proc_create): Pass in DT_PROC_STOP_CREATE, not
	DT_PROC_STOP_IDLE, to allow dt_proc_create_thread() to wait for
	thread creation to complete before returning.
	* (dt_proc_create): Increment hash lrucnt before adding to it.

2011-06-27  Nick Alcock  <nick.alcock@oracle.com>

	* dtrace.spec: New (thanks, Pearly).

	* makefile (uninstall): Removed, they never work properly.
	(install): Install in cmd/ as well.
	* libdtrace/makefile (uninstall): Removed.
	(install): Use DESTDIR.
	* cmd/makefile (BINDIR): Renamed to...
	(BUILD_DIR): ... this.
	* cmd/makefile (SBINDIR): New.
	* cmd/makefile (install): New.

2011-06-24  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_cc.c (dtrace_program_strcompile): Do not
	debugging-dump programs on error.
	(dtrace_program_fcompile): Likewise.

2011-06-24  Shujing Zhao  <pearly.zhao@oracle.com>

	Remove include/sys/elf.h.
	* include/sys/elf.h: Remove.
	* include/sys/link.h: Clean the flags and declarations.
	* include/sys/machelf.h: Likewise.

2011-06-21  Nick Alcock  <nick.alcock@oracle.com>

	Improve intermediate format printing.

	* libdtrace/dt_as.c (dt_as): Do not emit intermediate output here.

	* libdtrace/dt_cc.c (dtrace_program_strcompile): Emit it here instead.
	(dtrace_program_fcompile): Likewise.

	* libdtrace/dt_dis.c: Include <dt_printf.h>.
	(dt_dis): Rename to...
	(dt_dis_difo): ... this.  No longer print out the header line.
	(dt_dis_action): New, decode action names and printf() and
	printa() format strings.
	(dt_dis_format_print): New, print printf() and printa() format strings,
	eliding trailing linefeeds.
	(dt_dis_stmts): Disassemble a statement, including name of
	containing probe.
	(dt_dis_program): Disassemble a DTrace program.
	(dt_dis_iter): New helper type.
	* libdtrace/dt_impl.h: Drop dt_dis() in favour of dt_dis_program().

2011-06-17  Nick Alcock  <nick.alcock@oracle.com>

	Fix locking and signal handling around process termination.

	* libdtrace/dt_proc.h (dt_proc_t): Remove dpr_quit.  Maintain
	dpr_tid_locked inside the control thread to detect cancellation
	while dpr_lock is held.

	* libdtrace/dt_proc.c (dt_proc_control_cleanup): New cancellation
	function for control threads.
	(dt_proc_control): Call it.  No longer disable cancellation.  No
	longer mention SIGCANCEL or SIGUSR1, or check dpr_quit.  Remove
	unnecessary holds of dpr_lock.  Track dpr_tid_locked around
	dpr_lock holds.  Warn on PS_TRACESTOP hits, but do not terminate.
	Clean up on process exit using the cleanup function.
	(dt_proc_destroy): No longer grab dpr_lock around the dph cleanup.
	No longer set dpr_quit or send SIGUSR1: pthread_cancel() instead.
	Fix locking.
	(dt_proc_create_thread): No longer unmask SIGUSR1.
	(dt_proc_control_data): Spelling fix.

	* libproc/common/Pcontrol.c (blockable_sigs): Remove.
	(_libproc_init): Likewise.

2011-06-16  Nick Alcock  <nick.alcock@oracle.com>

	Drop obsolescent LFS transitional functions.
	Support CFLAGS modification from the command line better.

	* makefile (CFLAGS): Move parts needed for compilation...
	(CC): ... here. Move CFLAGS to the front, so it cannot
	override things given in CC.

	* cmd/dtrace.c (main): Drop LFS transitional *64()
	functions.

	* libctf/ctf_lib.c (ctf_sect_mmap): Likewise.
	(ctf_fdopen): Likewise.
	(ctf_open): Likewise.
	* libdtrace/drti.c (dtrace_dof_init): Likewise.
	(dtrace_dof_fini): Likewise.
	* libdtrace/dt_cc.c (dt_preproc): Likewise.
	(dt_compile): Likewise.
	* libdtrace/dt_module.c (dt_module_update): Likewise.
	* libdtrace/dt_options.c (dt_opt_ctypes): Likewise.
	* libdtrace/dt_options.c (dt_opt_dtypes): Likewise.

	* include/types_various.h (Lmid_t): Delete again, it is in
	<dlfcn.h>.

2011-06-16  Shujing Zhao  <pearly.zhao@oracle.com>

	Include C99 standard library header file stdint.h.

	* include/sys/int_types.h: Removed.
	* include/sys/stat.h: Removed.
	* include/sys/types32.h: Removed.
	* common/dis/dis_tables.h: Clean header files.
	* include/sys/auxv.h: Clean header files and remove aux32_t.
	* include/sys/elf_386.h: Remove unused macros.
	* include/sys/link.h: Clean #if 0.
	* include/sys/procfs.h: Remove unused header files and unused
	declarations.
	* include/sys/procfs_isa.h: Likewise.
	* include/types_various.h: Include stdint.h and clean the header files.
	* libproc/common/libproc.h: Remove unused Pgetareg and Pputareg.
	* uts/common/sys/dtrace.h: Remove unused header files.

2011-06-15  Nick Alcock  <nick.alcock@oracle.com>

	* include/types_various.h: Put Lmid_t back (needed for compilation
	at -O0).

2011-06-15  Nick Alcock  <nick.alcock@oracle.com>

	Process lifespan revamp.

	* libdtrace/dt_proc.c (dt_proc_waitrun): Unused, delete.
	(dt_proc_control): Drop Psetrun() flags: clarify comments.
	(dt_proc_destroy): Close TOCTTOU race around destruction, grabbing
	the lock around hash removal and permitting the refcnt to be >0
	without an assertion failure.  Drop dpr_cacheable.
	(dt_proc_retire): New function, wrapper around Pclose().
	(dt_proc_retired): Likewise, wrapper around Phasfds().
	(dt_proc_grab): Drop flags, nomonitor, staleness, cacheability,
	readonly grabs, and upgrading; retire upon LRU expiry rather than
	destroying; unretire when necessary.  Drop Pgrab() flags.  Always do
	LRU expiry.
	(dt_proc_release): Expire rather than destroying.  Drop lrucnt when
	we do it.

	* libproc/common/Pcontrol.c (Pcreate): Merge into...
	(Pxcreate): ... this. Drop environment manipulation. Drop statfd.
	Migrate memfd open() into...
	(Pmemfd): ... here.
	(Pcreate_error): Add C_FDS.
	(Pgrab): Drop flags and statfd. Populate memfd.
	(Pfree): Handle memfd closing using...
	(Pclose): ... this new function.
	(Phasfds): Return true if any fds are open.
	(Psetrun): Drop unused sig and flags. Detach rather than
	continuing. Only detach if already attached.
	(Pwait): Slight clarification.
	(Pread): Use Pmemfd() rather than direct P->memfd referencing.
	* libproc/common/Psymtab.c (Preadauxvec): Pgrab_core() is gone: we
	must do this some other way.
	* libproc/common/Pcontrol.h: Drop statfd.
	* libproc/common/libproc.h: Drop PGRAB flags and unused functions;
	fix up now-flagless Psetrun() and Pgrab(). Add new exported
	functions. Add C_FDS, and PS_TRACESTOP state.
	* libproc/common/mapfile-vers: Adjust.

	* libdtrace/dt_proc.h: Drop Pgrab() flags, dpr_rdonly, dpr_cacheable,
	and dpr_stale.
	* libdtrace/dt_aggregate.c (dt_aggregate_usym): Drop Pgrab() flags.
	(dt_aggregate_umod): Likewise.
	* libdtrace/dt_consume.c (dt_print_ustack): Likewise.
	(dt_print_usym): Likewise.
	(dt_print_umod): Likewise.
	* libdtrace/dt_pid.c (dt_pid_create_probes): Likewise (noting that
	one grab is not readonly and may need fixes later).
	* libdtrace/dt_proc.c (dtrace_proc_grab): Likewise.
	* libdtrace/dt_subr.c (dtrace_uaddr2str): Likewise.

	* include/sys/procfs.h: Purge now-unused flags.

	* INCOMPATIBILITIES: Most of the ptrace() incompatibilities are now gone.

2011-06-15  Kris Van Hees  <kris.van.hees@oracle.com>

	* libdtrace/dt_aggregate.c: Replace use of _SC_NPROCESSORS_MAX and
	_SC_CPUID_MAX with nr_cpu_ids (much lower limit).  Get it from
	dt_conf.dtc_maxbufs.
	* uts/common/sys/dtrace.h: Add dtc_maxbufs field to dtrace_conf_t.

2011-06-14  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/sys/controlregs.h: Remove.
	* include/sys/mkdev.h: Likewise.
	* include/sys/pset.h: Likewise.
	* include/sys/regset.h: Likewise.
	* include/sys/signal2.h: Likewise.
	* include/sys/statvfs.h: Likewise.
	* include/sys/sysi86.h: Likewise.
	* include/sys/time_impl.h: Likewise.
	* include/sys/trap.h: Likewise.
	* uts/common/sys/bitmap.h: Likewise.
	* uts/intel/sys/frame.h: Likewise.
	* include/sys/bitmap.h: Remove the unused header files.
	* include/sys/elftypes.h: Likewise.
	* include/sys/int_types.h: Likewise.
	* include/sys/procfs.h: Likewise.
	* include/sys/procfs_isa.h: Likewise.
	* libproc/amd64/Pisadep.c: Likewise.
	* libproc/common/libproc.h: Likewise.

2011-06-09  Shujing Zhao  <pearly.zhao@oracle.com>

	Remove the structures that are correspond to Solaris proc files.

	* include/sys/elf.h: Clean
	* include/sys/procfs.h: Clean and remove pr_flags, pr_wflags.
	(lwpstatus_t, pstatus_t, lwpsinfo_t, psinfo_t, prcred_t, priovec_t,
	 prusage_t, prpageheader_t, prasmap_t, prheader_t, lwpstatus32_t,
	 pstatus32_t, lwpsinfo32_t, psinfo32_t, prmap32_t, prxmap32_t,
	 prcred32_t, prwatch32_t): Remove.
	* libproc/common/proc.c: New.
	* libproc/common/makefile: Add proc.o to libproc.
	* libproc/amd64/Pisadep.c (int_syscall_instr, syscall_instr): Unused,
	remove.
	(Ppltdest): Set dmodel.
	(Pissyscall): Unused, remove.
	(Pissyscall_prev): Likewise.
	* libproc/common/Pcontrol.c (Pxcreate): Remove setting P->status.
	(Pgrab): Likewise.
	(Pfree): Remove check P->core.
	(Pstatus): Unused, remove.
	(Pcontent): Remove return core.
	* libproc/common/Pcontrol.h: Clean.
	(lwp_info_t, core_info_t): Remove.
	(ps_prochandle): Remove status and core.
	* libproc/common/Psymtab.c (get_saddrs): Set dmodel.
	(file_differs): Likewise.
	(fake_elf): Likewise.
	* libproc/common/libproc.h: Clean and add ps_getpid prototype.
	* libdtrace/dt_pid.c (dt_pid_per_sym): Use ps_getpid.
	(dt_pid_create_usdt_probes): Likewise.
	(dt_pid_per_mod): Set st_size directly.
	* libdtrace/dt_proc.c (dt_proc_bpmain): Remove psp.
	(dt_proc_control): Likewise.
	(dt_proc_lookup): Use ps_getpid.
	(dt_proc_create): Likewise.
	* libdtrace/i386/dt_isadep.c (dt_pid_has_jump_table): Use ps_getpid and set
	dmodel.
	(dt_pid_create_return_probe): Likewise.
	(dt_pid_create_offset_probe): Likewise.
	(dt_pid_create_glob_offset_probes): Likewise.	

2011-06-07  Nick Alcock  <nick.alcock@oracle.com>

	Rip out more code from Psymtab.c, simplifying code audits.

	* libproc/common/Psymtab.c: Prototypes for functions now called
	only from within this file.
	(file_info_new): Make static.
	(rd_loadobj_iter): Likewise.
	(Prd_agent): Likewise.
	(Preadauxvec): Likewise.
	(byaddr_cmp_common): Likewise.
	(optimize_symtab): Likewise.
	(Pbuild_file_symtab): Likewise.
	(Pfindmap): Likewise.

	(Pupdate_syms): Unused, remove.
	(Paddr_to_text_map): Likewise.
	(Paddr_to_loadobj): Likewise.
	(Plmid_to_loadobj): Likewise.
	(Pname_to_loadobj): Likewise.
	(Pbuild_file_ctf): Likewise.
	(Paddr_to_ctf): Likewise.
	(Plmid_to_ctf): Likewise.
	(Pname_to_ctf): Likewise.
	(Pgetauxvec): Likewise.
	(Pxlookup_by_addr): Likewise.
	(Pxlookup_by_addr_resolved): Likewise.
	(i_Pmapping_iter): Likewise.
	(Pmapping_iter): Likewise.
	(Pmapping_iter_resolved): Likewise.
	(Pobjname_resolved): Likewise.
	(Pxsymbol_iter): Likewise.
	(Psymbol_iter_by_lmid): Likewise.
	(Psymbol_iter): Likewise.
	(Psymbol_iter_by_name): Likewise.
	(Pplatform): Likewise.
	(Puname): Likewise.
	(struct getenv_data): Likewise.
	(getenv_func): Likewise.
	(Pgetenv): Likewise.
	(Penv_iter): Likewise.

	(i_Pobject_iter): Fold into...
	(Pobject_iter): ... its only caller.

	(i_Pobjname): Drop dead code, folding into...
	(Pobjname): ... its only caller.

	(Psymbol_iter_com): Drop dead code, folding into...
	(Psymbol_iter_by_addr): ... its only caller.

	* libproc/common/Pcontrol.h: Adjust accordingly.
	* libproc/common/libproc.h: Likewise.
	* libproc/common/mapfile-vers: Likewise.

	* libproc/common/Pcontrol.h: Delete dead structure members.
	* libproc/common/Psymtab.c (map_info_free): Likewise.
	(Pupdate_maps): Likewise.
	(Preset_maps): Likewise.
	* libproc/common/Pcontrol.c (Pxcreate): Likewise.
	(Pfree): Likewise.
	(Psetrun): Likewise.

2011-06-07  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/common/Pcontrol.c (minfd): Remove, pointless now this
	library is only being used by dtrace.
	(set_minfd): Likewise.
	(dupfd): Likewise, move its O_CLOEXEC to...
	(Pxcreate): ... here.
	(Pwrite_live): Remove.

	(Pread_live): Migrate contents into...
	(Pread): ... here.

	* libproc/common/Pcontrol.c (Pxcreate): Drop ctlfd, agentctlfd,
	agentstatfd; rename asfd to memfd. Drop ops initialization.
	(Pread_string): Stop using it.
	(Pgrab): Likewise.
	(Pgrab_error): LWPs do not exist on Linux.
	(Pfree): Likewise.
	(Pasfd): Rename to Pmemfd().
	(Pctlfd): Remove.
	(Pwait): Fix int/long int confusion.

	* libproc/common/mapfile-vers: Delete dead functions.
	* libproc/common/Pcontrol.h: Likewise.
	(ps_rwops): Delete.
	(ps_lwphandle): Likewise.
	(ps_prochandle_t): Delete hashtab, ctlfd, statfd, agentctlfd,
	agentstatfd, ops. Rename asfd to memfd.

2011-06-07  Nick Alcock  <nick.alcock@oracle.com>

	Rip out breakpoint handling.

	* libdtrace/dt_proc.h (dt_proc_t): Remove dpr_bps.
	(dt_bkpt): Delete.
	(bt_bkpt_f): Likewise.

	* libdtrace/dt_proc.c: Fix header comment to describe what libproc
	will do when I've finished with it.
	(dt_proc_bpcreate): Delete.
	(dt_proc_bpdestroy): Likewise.
	(dt_proc_bpmatch): Likewise.
	(dt_proc_bpenable): Likewise.
	(dt_proc_bpdisable): Likewise.
	(dt_proc_stop): Remove calls to these functions.
	(dt_proc_attach): Likewise.
	(dt_proc_notify): Likewise.
	(dt_proc_destroy): Likewise.
	(dt_proc_control): Likewise.

	* libproc/common/Pcontrol.c (Pdelbkpt): Remove.
	* libproc/common/mapfile-vers: Remove Pdelbkpt, Psetbkpt.

2011-06-03  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/libproc.h: Drop PS_LOST, PS_UNDEAD, PS_IDLE. Remove
	Ppsinfo prototype.
	* libdtrace/dt_proc.c (dt_proc_bpdestroy): Drop a bit of PS_LOST and
	PS_UNDEAD.
	(dt_proc_control): Likewise.
	(dt_proc_create_thread): Likewise.
	* libproc/common/Pcontrol.c (Ppsinfo): Remove.
	(Prelease): Drop a bit of PS_IDLE.
	(Pdelbkpt): Likewise.
	(Pcontent): Likewise.
	* libproc/common/Psymtab.c (Pupdate_maps): Drop PS_UNDEAD.
	(Pupdate_syms, Preadauxvec, Pbuild_file_symtab, object_name_to_map,
	 Pplatform, Puname): Drop PS_IDLE.

2011-06-03  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/common/Pcontrol.c (Pwait): Rewrite to use waitid().
	* (prdump): Removed.
	* libproc/common/libproc.h ("C"): Remove priv functions.
	* libproc/common/mapfile-vers: Likewise.

	* libdtrace/dt_proc.c (dt_proc_control): Drop a bit of PS_UNDEAD
	stuff, this state is impossible now.

	* INCOMPATIBILITIES: Add a new problem with using ptrace().

2011-06-01  Nick Alcock  <nick.alcock@oracle.com>

	* include/sys/corectl.h: Solaris-specific, delete.
	* include/sys/priv.h: Likewise.
	* include/sys/procfs.h: Drop references.
	* libproc/common/Pcontrol.c: Likewise.
	(Pfree): Drop Solaris-specific coredump privilege state.
	* libproc/common/Pcontrol.h: Likewise.

2011-06-01  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/common/Pcontrol.c (Psetflags): Remove, unused.
	* libproc/common/libproc.h: Likewise.
	* libproc/common/mapfile-vers: Likewise.

2011-06-01  Nick Alcock  <nick.alcock@oracle.com>

	Reshape the process control loop somewhat. Drop a lot of
	Solaris-specific proc-handling code. Rip out code relating to
	things we cannot implement (notably multiple-debugger support).

	* libdtrace/dt_proc.c (dt_proc_rdevent): Delete unused function used
	only for multiple-debugger support.
	(dt_proc_waitrun): Likewise.
	(dt_proc_control_data): Improve comment.

	* libdtrace/dt_proc.h (dt_proc_t): New dpr_created flag.
	* libdtrace/dt_proc.c (dt_proc_create): Assign it. Tear out
	process flag manipulation.
	(dt_proc_grab): Likewise.
	(dt_proc_control): Likewise. Remodel the process-control loop.
	Tear out PS_LOST support. Use Pwait() rather than write() to a
	proc fd. Drop Pstopstatus() (the same as Pwait() nowadays). Drop
	requested-stop stuff pro tem.

	* (dt_proc_attach): Note that we need to reimplement breakpointing
	on main() (and breakpointing in general).

	* libproc/common/Pcontrol.c (Prelease): Simplify to a ptrace()
	call (the only feature we use).
	* libdtrace/dt_proc.c (dt_proc_destroy): Use dpr_created, and new
	simplified Prelease().

	* libproc/common/Pcontrol.c: Ditch dead code.
	(Psync): Remove, process flags are gone.
	(Preopen): Remove, PS_LOST is gone.
	(restore_tracing_flags): Remove, all users gone.
	(Punsetflags): Likewise.
	(prdump): Drop an #if 0.
	(Pwait): Replace with the body of...
	(Pstopstatus): ... this (which no longer exists under this name).
	(Pstop): Remove.
	(Psetrun): Remove Psync() call.
	* libproc/common/Pcontrol.h: Drop dead prototypes.
	* libproc/common/libproc.h: Likewise: also dead flags.
	* libproc/common/mapfile-vers: Likewise.

2011-05-31  Nick Alcock  <nick.alcock@oracle.com>

	* INCOMPATIBILITIES: New file, describe known incompatibilities
	between Solaris dtrace and Linux dtrace which we do not plan to
	fix in v1.

2011-05-31  Shujing Zhao  <pearly.zhao@oracle.com>

	* makefile: Use -D_GNU_SOURCE and clean CC.
	* cmd/makefile: Clean CPPFLAGS.
	* libctf/makefile: Likewise.
	* libdtrace/makefile: Likewise. 
	* libproc/common/makefile: Likewise.
	* libdtrace/dt_string.c: Remove strndup.
	* libdtrace/dt_string.h: Likewise.
	* include/types_various.h: Remove Lmid_t.

	* include/sys/regset.h: Remove the definitions of register.
	* libdtrace/i386/regs.sed.in: Rewrite according to the definitions at
	reg.h.
	* libdtrace/i386/regs.d.in: Rewrite. 

	* runtest.sh: Downward compatibility case statement.

2011-05-25  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/makefile (dt_lex.c): Fix -o option of flex.

2011-05-25  Nick Alcock  <nick.alcock@oracle.com>

	Remove references to zones.

	* uts/common/sys/dtrace.h: ... from here...
	* include/sys/corectl.h: ... and here...
	* include/sys/procfs.h: ... and here...
	* include/types_various.h: ... and here...
	* libdtrace/dt_open.c: ... and here...
	* libproc/common/Pcontrol.c (Pfree): ... and here...
	* libproc/common/Pcontrol.h: ... and here...
	* libproc/common/Psymtab.c: ... and here.
	* libproc/common/Pzone.c: Removed...
	* libproc/common/makefile: ... and from here.
	* libproc/common/Psymtab.c (Pfindmap): Migrated from
	Pzone.c, with zone support removed.

	Remove some references to <sys/procfs.h>.

	* include/procfs_service.h: Remove inclusion.
	* libdtrace/dt_aggregate.c: Likewise.
	* libdtrace/procfs.sed.in: Likewise.
	* libproc/common/Pcontrol.h: Likewise.

	Remove process set functions.

	* libproc/common/Putil.c (prset_fill): Remove.
	(prset_empty): Likewise.
	(prset_add): Likewise.
	(prset_del): Likewise.
	(prset_ismember): Likewise.
	* libproc/common/Putil.h: Remove declarations.

	Remove fault trapping.

	* libdtrace/dt_proc.c (dt_proc_control): Removed.
	* libproc/common/Pcontrol.c (Pfault): Likewise.
	(Psetfault): Likewise.
	(Psetaction): Likewise.
	(Psync): Remove SETFAULT.
	(restore_tracing_flags): Likewise.
	libproc/common/Pcontrol.h: Likewise.

	Fix environment handling.

	* libproc/common/Psymtab.c (Plookup_by_name): Remove.
	(NARG): Remove.
	(Penv_iter): Get the environment the Linux way. Read in the whole
	thing, then process it, rather than working chunk-by-chunk.
	(getenv_func): Drop the address-of-environment arg.

	Compensate for new ioctls.

	* libdtrace/dt_subr.c (dt_ioctl): Use the Linux definition of
	'val'.
	* libdtrace/dt_impl.h: Adjust declaration.

	Cleanup.

	* libproc/common/libproc.h: Remove declarations of deleted
	functions.
	* libproc/common/mapfile-vers: Likewise.

2011-05-24  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/makefile (dt_lex.o): Pass -DYYDEBUG=1.

2011-05-23  Kris Van Hees  <kris.van.hees@oracle.com>

	* uts/common/sys/dtrace_ioctl.h: New file - needed for correct
	ioctl IDs.
	* uts/common/sys/dtrace.h: Removed ioctl IDs, replaced with an
	include of dtrace_ioctl.h.

2011-05-23  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_grammar.y (%): Prototype yylex().
	* libdtrace/dt_impl.h (yytext): Make it a pointer, to allow flex
	to parse tokens of unbounded length efficiently.
	* libdtrace/makefile (dt_lex.c): No longer run flex in traditional
	mode. Use -o rather than redirecting output.
	* libdtrace/dt_lex.l: Turn on automatic yylineno updating.
	Push the ^ in RGX_INTERP and RGX_CTL into the rules where they are
	expanded, as POSIX mode wraps all variable expansions in (), and ^
	is not meaningful inside ().
	Fix dangerous trailing context: this has no meaningful
	semantics and is undefined per POSIX.

	* demo/dtrace/end.d: Test skipping of interpreter lines. (This
	is the only rule modified above which does not yield an error
	if matched.)

2011-05-23  Nick Alcock  <nick.alcock@oracle.com>

	* runtest.sh: Support regression tests via multiple dtrace build
	directories. Use case rather than if/elif tree, and echo rather
	than if. Post-process regtest output to conceal variable pointer
	addresses.

	* libdtrace/dt_dis.c (dt_dis): Print pointers via %p, not 0x%p:
	%p under glibc, as on most systems, already includes an 0x.

	* .gitignore: New.

2011-05-23  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/dt_open.c (_dtrace_libdir): Use #define to decide value.
	* libdtrace/makefile (CPPFLAGS): Set it.

	* libdtrace/makefile (LIB): drti.o is not part of libdtrace.a...
	(DRTI_OBJ): ... but is independent, and goes in the build dir,
	like the library.
	(all): Build it.

	* libdtrace/drti-vers: New version script, for use by `dtrace -G'.
	* libdtrace/makefile (install): Install it. Use mkdir -p.

	* libdtrace/dt_link.c (dtrace_program_link): Link using drti-vers
	as a version script to enforce locality. Don't use the 64/
	subdirectory.

2011-05-23 Shujing Zhao  <pearly.zhao@oracle.com>

	* libport/proc_name.c: Remove.
	* libport/makefile: Remove proc_name.o from the lib.
	* include/port.h: Clean the declaration.
	* libproc/common/libproc.h: Clean the declarations that have been
	removed the definitions.

2011-05-20  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/drti.c: Remove needless back-compatibility.
	* libdtrace/drti.c (dtrace_dof_init): Likewise.

2011-05-18  Nick Alcock  <nick.alcock@oracle.com>

	* makefile: Turn on warnings. Move to LARGEFILE64 mode,
	providing open64() et al.

 	* libproc/common/Pcontrol.c (prdump): Cure aliasing violation.
	(restore_tracing_flags): Drop unused variable.
	(Pxcreate): Likewise. Use fork(), not fork1().
	* libdtrace/dt_cc.c (dt_preproc): Likewise.
	(dt_compile): Make sure rv is always initialized.
	* libport/proc_name.c: Drop fork1().

	* include/port.h: Fix lethal typo. Import many more declarations.

	* libdtrace/dt_cc.c: Include <port.h>.
	* libdtrace/dt_aggregate.c: Likewise.
	* libdtrace/dt_consume.c: Likewise.
	* libdtrace/dt_pid.c: Likewise.
	* libdtrace/dt_printf.c: Likewise.
	* libdtrace/dt_provider.c: Likewise.
	* libdtrace/dt_work.c: Likewise.
	* cmd/dtrace.c: Likewise.
	* libproc/common/Psymtab.c: Likewise.
	* libproc/common/Pzone.c: Likewise.
	* libdtrace/dt_module.c: Likewise. Also use <string.h>, not the
	obsolete <strings.h>. Drop some commented-out headers.
	* libdtrace/dt_proc.c: Include <port.h> and <poll.h>.
	* libdtrace/dt_subr.c: Include <port.h> and <sys/ioctl.h>.

	* libdtrace/dt_open.c (dt_get_sysinfo): Remove.
	(dt_vopen): Drop nonportable sysinfo(), use uname() instead.
	* libproc/common/Psymtab.c (Pplatform): Likewise.
	* include/sys/auxv.h: Drop nonportable sysinfo().
	* include/sys/elf.h (NT_PLATFORM): Likewise.
	* include/types_various.h: Likewise.

	* common/dis/dis_tables.c (dtrace_disx86): Add explicit brackets.
	* libdtrace/dt_aggregate.c (dtrace_aggregate_snap): Likewise.
	* libdtrace/dt_aggregate.c (dt_aggregate_valcmp): Note possible
	site of crash (not fixed).
	* libdtrace/dt_options.c (dt_options_load): Likewise.

	* include/sys/compiler.h (_dt_noreturn_): New.
	* libdtrace/dt_parser.c (dnerror): Use it.
	(xyerror): Likewise.
	(yyerror): Likewise.
	* libdtrace/dt_parser.h: Likewise.

	* libdtrace/i386/dt_isadep.c: Include missing header.
	* libdtrace/drti.c: Likewise.
	(dtrace_dof_init): Cast pointer. Avoid possible uninitialized
	variable use.
	* libdtrace/dt_consume.c (dt_print_stack): Cast uint64_t
	to 'unsigned long long' as its size can vary.
	* libdtrace/dt_handle.c (dt_handle_cpudrop): Likewise.
	(dt_handle_status): Likewise.
	* libdtrace/dt_subr.c (dtrace_uaddr2str): Likewise.
	* libdtrace/i386/dt_isadep.c (dt_pid_create_glob_offset_probes):
	Cast value sprintf()ed with %x to 'int'.
	* libproc/common/Psymtab.c (Pupdate_maps): 'inode' is an unsigned
	type. fopen() returns NULL on failure, not a value < 0.

	* libdtrace/dt_handle.c (dt_handle_liberr): Assign '0' to numeric
	types, not NULL.
	* libdtrace/dt_module.c (dt_module_unload): Likewise.
	* libproc/common/Psymtab_machelf32.c (fake_elf64): Likewise.
	Avoid uninitialized data accesses due to #if 0'ed branch.

	* libproc/common/Psymtab.c (rd_loadobj_iter): Remove unused variable.
	Note possible pointer size bug (not fixed).

	* libport/time.c (gethrtime): Use new-style definition.

2011-05-18  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/dt_proc.c: Remove dt_proc_bpcreate from Linux.
	(dt_proc_bpenable): It can set bkpt by Psetbkpt. Remove it.
	* libproc/common/Pcontrol.c (restore_tracing_flags): Remove the part
	of writing ctl file.
	(Pclearsig): Remove.
	(Pclearfault): Remove.
	(Psetbkpt): Remove.
	(execute_bkpt): Remove.
	(Pxecbkpt): Remove.
	(Psetwapt): Remove.
	(Pdelwapt): Remove.
	(execute_wapt): Remove.
	(Pxecwapt): Remove.
	(Psignal): Remove.
	(Padd_mapping): Remove.
	(map_sort): Remove.
	(Psort_mappings): Remove.
	* libproc/common/libproc.h: Clear declarations.
	* libproc/common/Pcontrol.h: Clear.

2011-05-17  Nick Alcock  <nick.alcock@oracle.com>

	* libdtrace/makefile: Create most .d files with one pattern rule.
	No longer create .sed.in.c files. Clean up properly.

2011-05-16  Nick Alcock  <nick.alcock@oracle.com>

	* libctf/ctf_lib.c: Include missing header.
	* libctf/ctf_subr.c: Likewise.
	* common/ctf/ctf_types.c: Likewise.
	* common/ctf/ctf_labels.c: Likewise.

	* common/ctf/ctf_labels.c (ctf_label_topmost): Convince GCC that
	these variables are initialized when used.
	* common/ctf/ctf_labels.c (ctf_label_iter): Likewise.

	* common/ctf/ctf_create.c (ctf_discard): Do not assign to
	uninitialized variables or infloop when skipping committed types.

2011-05-13  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/Psymtab.c (Pbuild_file_symtab): Replace
	/proc//object/a.out with /proc//exe.
	* libproc/common/Pzone.c (Pfindmap): Replace /proc//path/a.out with
	/proc//exe.
	(Pbrandname): Remove.
	* libproc/common/makefile: Remove Pcore.o.

2011-05-12  Nick Alcock  <nick.alcock@oracle.com>

	Purge zlib indirection machinery.

	* libctf/ctf_lib.c (_libctf_zlib): Remove.
	(struct zlib): Likewise.
	(_libctf_init): Drop its initialization, and LIBCTF_DECOMPRESSOR.
	Make static.
	(ctf_zopen): Remove.
	(z_uncompress): Likewise.
	(z_strerror): Likewise.

	* common/ctf/ctf_impl.h: Remove from header.
	(ECTF_ZMISSING): Remove.
	(ECTF_ZINIT): Likewise.

	* common/ctf/ctf_open.c: Include zlib.h.
	(ctf_bufopen): Call the zlib functions directly.

2011-05-12  Nick Alcock  <nick.alcock@oracle.com>

	Translate PRINTFLIKE into GCC attributes.

	* include/sys/compiler.h: Don't bother with individual ifdef guards.
	(_dt_printflike_): New.
	(_dt_unused_): Likewise.

	* libdtrace/dt_link.c (dt_link_error): Use _dt_printflike_().
	* libdtrace/dt_parser.c (dnerror): Likewise.
	(dnwarn): Likewise.
	(xyerror): Likewise.
	(xywarn): Likewise.
	(yyerror): Likewise.
	(yywarn): Likewise.
	* libdtrace/dt_proc.c (dt_proc_error): Likewise.
	* libdtrace/dt_subr.c (dt_dprintf): Likewise.
	(dt_printf): Likewise.

	* libctf/ctf_subr.c (ctf_dprintf): Likewise.
	* common/ctf/ctf_decl.c (ctf_decl_sprintf): Likewise.

	* cmd/dtrace.c: Include <sys/compiler.h>.
	(fatal): Use _dt_printflike_().
	(dfatal): Likewise.
	(error): Likewise.
	(notice): Likewise.
	(oprintf): Likewise.

	* libproc/common/Putil.c (_dprintf): Likewise.
	(Perror_printf): Likewise. Also use _dt_unused_.

	* libdtrace/dt_impl.h: Add to prototypes too.
	* libdtrace/dt_parser.h: Likewise. Include <sys/compiler.h>.
	* common/ctf/ctf_impl.h: Likewise. Include <sys/compiler.h>.
	* libproc/common/libproc.h: Likewise.
	* libproc/common/Putil.h: Reintroduce elided _dprintf()
	declaration. Include <sys/compiler.h>.

	* libproc/common/Pcontrol.c (Psetrun): Use _dprintf().

2011-05-12  Nick Alcock  <nick.alcock@oracle.com>

	Begin transforming pragmas to GCC attributes.

	* include/sys/compiler.h: New file, defining
	_dt_constructor_ and _dt_destructor_.

	* libdtrace/drti.c: Include <sys/compiler.h>.
	* libdtrace/dt_impl.h: Likewise. Drop commented-
	out include.
	* libctf/ctf_lib.c: Likewise.
	* libproc/common/libproc.h: Likewise.
	* libproc/common/Pcontrol.h: Likewise.

	* libproc/common/Pcontrol.c (_libproc_init):
	Declare using _dt_constructor_.
	* libctf/ctf_lib.c (_libctf_init): Likewise.
	* libdtrace/dt_open.c (_dtrace_init): Likewise.
	* libdtrace/drti.c (dtrace_dof_init): Likewise.
	(dtrace_dof_fini): Declare using _dt_destructor_.

	* libdtrace/dt_proc.h: Drop commented-out include.

2011-05-12  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/P32ton.c, P32ton.h: Remove.
	* libproc/common/Pcontrol.c: Clean headers.
	* libproc/common/makefile: Remove P32ton.o from libproc.

2011-05-11  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/dt_module.c (dtrace_update): Don't open the /system/object
	files.
	(dt_module_update): Remove.
	* include/sys/link.h: Clean the useless macros.
	* uts/common/sys/ctfs.h: Remove CTFS_ROOT.
	* uts/common/sys/objfs.h: Remove OBJFS_ROOT and OBJFS_MODID.

2011-05-09  Nick Alcock  <nick.alcock@oracle.com>

	* libproc/common/Psymtab.c (Penv_iter): Remove bogus check on length of
	argument lists: recent Linux kernels have no limit, and programs should
	never assume a limit.
	* libdtrace/procfs.sed.in: Remove nonexistent headers.

2011-05-06  Nick Alcock  <nick.alcock@oracle.com>

	* makefile (MACH): Use 'uname -m' to get machine arch.
	(archcheck): Grammar fix.

2011-05-05  Nick Alcock  <nick.alcock@oracle.com>

	Remove syscall interposition.

	* libproc/common/Pcontrol.c: Clean headers.
	(Pxcreate): No longer use pause() and syscall interposition to
	trace after execvp(). Drop lots of commented-out code.
	(Pcreate_callback): Removed.
	(Psync): Delete SETENTRY and SETEXIT cases.
	(restore_tracing_flags): Likewise.
	(Pstopstatus): Likewise.
	(Psysentry): Remove.
	(Psetsysentry): Likewise.
	(Psysexit): Likewise.
	(Psetsysexit): Likewise.
	* libproc/common/libproc.h ("C"): Remove Psysentry and Psysexit.
	* libproc/common/P32ton.c (pstatus_n_to_32): Remove pr_sysentry and
	pr_sysexit.
	* libproc/common/mapfile-vers: Remove now-deleted functions.

	* include/sys/procfs.h: Remove PCSENTRY, PCSEXIT, pr_sysentry
	and pr_sysexit.

	* libdtrace/dt_proc.c (IS_SYS_EXEC): Remove.
	(IS_SYS_FORK): Likewise.
	(dt_proc_rdwatch): Likewise.
	(dt_proc_attach): Remove rtld tracing pending addition of
	appropriate static tracepoints.
	(dt_proc_control): Remove syscall hooking of fork(), vfork(), and
	forksys(), and detachment/reattachment and breakpoint manipulation
	around fork().

2011-04-29  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/Pcore.c, Pexecname.c, Pisadep.h, Pservice.c,
	Pstack.c, Pstack.h: Removed.
	* libproc/common/makefile: Remove Pcore.o, Pexecname.o, Pservice and
	Pstack.o.
	* libproc/common/Pzone.c (Pfindmap): Don't handle a.out segment.
	* libproc/common/Pcontrol.c (Psetrun): Pass the sig argument to ptrace.
	* libproc/amd64/Pisadep.c: Remove the functions that would never be
	called.

2011-04-28  Shujing Zhao  <pearly.zhao@oracle.com>

	* runtest.sh: Test "-p" option by grab self pid.
	* libproc/amd64/Pisadep.c: Remove Psyscall_copyinarg and
	Psyscall_copyoutargs.
	* libproc/common/Pisadep.h: Same.
	* libproc/common/Pcontrol.c: Don't use statfd to get the proc status
	  information.
	  (deadcheck, Pgetareg, Pputareg read_lfile): Remove.
	  (Pgrab): Rewrite it by using ptrace.
	  (Pxcreate): statfd is always be set to -1. Don't open or read any /proc
	  files.
	  (Preopen): Same. Also clean the codes of pr_lwp.
	  (Pfree): Clean the codes since some fds would never be set.
	  (Prelease): Clean the codes of pr_lwp.
	  (Psetrun, Psetflags, Punsetflags): Same.
	  (Pstopstatus): Clean the codes about statfd.

2011-04-22  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/rtld_db.h: Clean.
	* libproc/common/Pzone.c: Remove the functions that handle LOFS.	

2011-04-19  Shujing Zhao  <pearly.zhao@oracle.com>

	* cmd/dtrace.c: Don't include libproc.h.
	* makefile: Fix.
	* libdtrace/dt_proc.c: Rmove dt_proc_bpmatch.
	* libproc/common/Pcore.c: Remove note_lwpstatus, note_lwpsinfo and
	  lwpid2info.
	* libproc/common/Pcontrol.c: Remove the part about agentcnt.
	* libproc/common/Pidle.c, Pscantext.c, Psyscall.c: Removed.
	* libproc/common/makefile: Fix.
	* uts/common/sys/ccompile.h, time_std_impl.h: Removed.

2011-04-13  Shujing Zhao  <pearly.zhao@oracle.com>

	Remove librtld.
	* makefile: Adjust.
	* libdtrace/dt_open.c, dt_proc.c: Fix.
	* libproc/common/Psymtab.c, Psymtab_machelf32.c: Fix. 

2011-04-06  Shujing Zhao  <pearly.zhao@oracle.com>

	* cmd/dtrace.c: clear function prochandler.
	* include/sys/regset.h: Don't include privregs.h.
	* libdtrace/dt_proc.c: Remove to get infor from Ppsinfo.
	libproc/common
	* P32ton.c: Remove the functions about lwp.
	* Pcontrol.c: Remove the functions about lwp-specific operation.
	* Pservice.c: Likewise.
	* Pstack.c: Likewise.
	* Plwpregs.c: Delete.
	* proc_arg.c: Delete.
	* proc_get_info.c: Delete.
	* proc_names.c: Delete.
	* proc_set.c: Delete.
	* proc_stdio.c: Delete.
	* libproc.h: Delete.
	* makefile: Fixed.
	
2011-03-30  Shujing Zhao  <pearly.zhao@oracle.com>
	
	* include/sys/link.h: Include system link.h and remove the conflict
	definitions.
	* librtld/rd_elf.c, rtld.h: Fixed.

2011-03-30  Shujing Zhao  <pearly.zhao@oracle.com>

	Clean the header files.
	include/
	* confname_add.h, door.h, ieeefp.h, objfs.h, param.h, priv.h, procfs.h,
	  types_blk.h, types_boolean.h, types_dev.h, types_lmid.h, types_off.h,
	  types_pad.h, types_posix.h, types_time.h, zmod.h, zone.h, sys/fp.h,
	  sys/old_procfs.h: Removed and moved the useful definitions to
	types_various.h. Change the files that include these files.
	* sys/types.h: Added.
	* types_various.h: Added definitions. 
	
	cmd/
	* dtrace.c, makefile: Move to the parent directory.
	
	libproc/
	* common/Pgcore.c: Removed.
	* common/makefile: Fixed.

2011-03-29  Shujing Zhao  <pearly.zhao@oracle.com>

	Remove pr_*.c files from libpro/common/.
	* libproc/common/makefile: Remove the pr_*.o from libproc.
	* libproc/common/libproc.h: Remove the declarations for the functions
	  definied at pr_*.c files.
	* libdtrace/dt_pid.c: Don't use pr_open and pr_close.
	* libproc/common/Psyscall.c: Don't use pr_lwp_exit.
	* include/types_various.h: Clean the definitions.

	* libdtrace/makefile: Fix.

2011-03-22  Shujing Zhao  <pearly.zhao@oracle.com>

	Remove the support to i386 and only support amd64.
	* makefile: Use D_ILP64 instead of D_ILP32.
	* libproc: Remove i386 and add amd64.
	* driver/dis_tables.c, driver/dis_tables.h: Move to common/dis/.

2011-03-11  Shujing Zhao  <pearly.zhao@oracle.com>

	* cmd/common/dtrace.c: Uncomment function dtrace_handle_proc.
	* include/types_various.h: Remove SIGCANCEL and SYS_forksys.
	* libdtrace/dt_proc.c (dt_proc_control): Trace SYS_fork instead of
	SYS_forksys. Use SIGUSR1 instead of SIGCANCEL. Use pthread_kill
	instead of _lwp_kill.
	(dt_proc_creat): Pass DT_PROC_STOP_IDLE to dt_proc_create_thread.
	* libport/time.c: Remove _lwp_kill.
	* runtest.sh: Update

2011-03-04  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/Pcontrol.c: Comment the code about writing a ctf file.
	Add ptrace code if needed.

2011-02-25  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/dt_impl.h (dt_module_t): Remove memeber dm_modid since
	there is no module id at Linux.
	* libdtrace/dtrace.h (dtrace_objinfo_t): Remove memeber dto_id.
	* libdtrace/dt_module.c, libdtrace/dt_open.c: Remove the reference to
	dm_modid and dto_id.
	* libdtrace/*, common/ctf/*, libproc/common/*: Remove inclusion header
	file sysmacros.h.
	* runtest.sh: Update.

2011-02-12  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/procfs.sed.in: Include the needed and existing header
	files.

2011-02-11  Shujing Zhao  <pearly.zhao@oracle.com>
	
	* libproc/common/Putil.c: Change dprintf to _dprintf.
	* libproc/common/Putil.h: Adjust.
	* libproc/common/Pcontrol.c, libproc/common/Pexecname.c,
	libproc/common/Psymtab_machelf32.c, libproc/common/Pzone.c,
	libproc/common/Pidle.c, libproc/common/pr_meminfo.c,
	libproc/common/Pscantext.c, common/Pstack.c, libproc/common/Psymtab.c,
	libproc/common/Pcore.c, libproc/common/Pservice.c: Adjust caller.

2011-02-10  Shujing Zhao  <pearly.zhao@oracle.com>

	* cmd/common/dtrace.c: Assigned g_ofp to stdout in main function for
	stdout is a macro and not be address constants at compile time.
	* demo/*: Add more test cases.
	* runtest.sh: Added.
	* libdtrace/makefile: Adjust regs.d.
	* makefile: Adjust.

2011-01-26  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/makefile (signal.d): Exchange the line of SIGCLD and
	SIGCHLD, SIGPOLL and SIGIO.
	(install): Install errno.d regs.d signal.d unistd.d to the
	/usr/lib/dtrace.
	* libdtrace/i386/regs.sed.in: Remove @.

2011-01-21  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/dt_open.c: Fix the directory of _dtrace_defcpp.
	* libdtrace/io.sed.in, ip.sed.in, net.sed.in, procfs.sed.in,
	sysevent.sed.in, tcp.sed.in, udp.sed.in, i386/regs.sed.in: Remove the
	header files that are not existed.
	* libdtrace/makefile: Compile the D library and install to
	/usr/lib/dtrace.

2011-01-10  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/Psymtab.c (get_saddrs): Initial addrs to NULL.

2011-01-07  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/Psymtab.c (rd_loadobj_iter): Fix this function to get
	the right data of the library.

2010-12-24  Shujing Zhao  <pearly.zhao@oracle.com>

	* librtld/rtld_db.c: Move rd_loadobj_iter to ...
	* libproc/common/Psymtab.c: here and remove the first parameter rap
	and adjust the callers.
	* include/rtld_db.h (rd_loadobj_iter): Remove.
	* libproc/common/Pcontrol.h (rd_loadobj_iter): Declare.

2010-12-17  Shujing Zhao  <pearly.zhao@oracle.com>

	* cmd/common/dtrace.c: set environment variable POSIXLY_CORRECT to
	make getopt works on Linux.

2010-12-07  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/dt_proc.c (dt_proc_control): Set dpr->dpr_quit to 1
	instead of write ctl file.
	* libproc/common/Pcontrol.c (Pxcreate): Don't detach to the child
	process.
	(Psetrun): Restarts the stopped child process by ptrace instead of
	write to the ctl file.
	* libproc/common/Psymtab.c (Pupdate_maps): Use fclose instead of close
	to close the file.

2010-12-03  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/sys/procfs.h: Comment the definition of prxmap_t and
	prxmap32_t. They are not be used.
	* libproc/common/Pcontrol.c (Pxcreate): Use ptrace to trace child
	process instead of using signal to control it.
	* libproc/common/Psymtab.c (Pupdate_maps): Change the way to read
	/proc/<pid>/maps, for the file size is zero at Linux.
	* libproc/common/Psymtab.c (Preadauxvec): Change the way to read
	/proc/<pid>/auxv, for the file size is zero at Linux.

	* libproc/common/Pscantext.c (Pscantext): Change the way to read
	/proc/<pid>/maps.

2010-11-24  Shujing Zhao  <pearly.zhao@oracle.com>

	* libproc/common/Pcontrol.c (sig_int): New function used as signal
	handler.
	(Pxcreate): Add signal handler to child process. Use
	/proc/<pid>/mem instead of /proc/<pid>/as, </proc/<pid>/stat instead
	of /proc/<pid>/status and remove to use /proc/<pid>/ctl. Use waitpid
	on the parent process.
	(Pgrab, Preopen, Pstopstatus): Similar with the Pxcreat. Fix the proc
	files and don't use ctl to control the process.

2010-11-16  Shujing Zhao  <pearly.zhao@oracle.com>
	
	* libdtrace/makefile (dt_lex.c): Use "-l" compatibility option to write
	  to the .c file.
	* libdtrace/dt_impl.h: Remove the declaration of yytext for Linux.
	* libdtrace/dt_lex.l: Undefine input() and unput() and define YY_INPUT()
	  macro.

2010-11-05  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/makefile (dt_errtags.c, dt_names.c): Use sh to run the
	script.

2010-11-04  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/types_various.h (SYS_getpeername, SYS_getsockname and
	SYS_getsockopt): New.
	* include/sys/old_procfs.h: Make old_procfs.h can be included even
	_LP64 is not defined.
	* libdtrace/dt_module.c: Use elf_getshstrndx instead of
	elf_getshdrstrndx.
	* libport/elf.c: Removed.
	* libport/makefile: Remove elf.o and fix the compile option.
	* libproc/common/Psymtab.c: Use elf_getshstrndx and elf_getshnum
	instead of elf_getshdrstrndx and elf_getshdrnum.

2010-11-03  Shujing Zhao  <pearly.zhao@oracle.com>

	* common/ctf/ctf_create.c: Include types_various.h.
	
	include/
	* ieeefp.h: New.
	* sys/fp.h: New.
	* sys/procfs.h: New.
	* sys/signal2.h: New.
	* sys/types32.h: New.
	* procfs.h: Remove _STRUCTURED_PROC definition.
	* types_posix.h: New type major_t and minor_t.
	* types_time.h: New struct itimerval32.
	* procfs_service.h: Move psaddr_t and lwpid_t to ...
	* types_various.h: ... here.
	(dev32_t, size32_t and caddr32_t): Removed.
	(ino64_t): Define if ino64_t not defined.
	(blkcnt64_t and blksize_t): New type.
	(SYS_sigaction and SYS_fstatat64): New.
	(SYS_getpeername, SYS_getsockname and SYS_getsockopt): Removed.
	(flock64_32_t): New.
	(SI_FROMUSER, SI_FROMKERNEL and SI_CANQUEUE): New.
	* sys/auxv.h: Remove _ASM and _SYSCALL32 conditional.
	* sys/link.h: Likewise. 
	* sys/old_procfs.h: Likewise.
	* sys/procfs_isa.h: Likewise.
	* sys/regset.h: Likewise.
	* sys/stat.h: Likewise.
	* sys/statvfs.h: New type statvfs32_t.

	libdtrace/
	* dt_aggregate.c: Include sys/procfs.h.
	* dt_module.c: Include sys/stat.h.
	* makefile (dt_module.o): Use -D_LARGEFILE64_SOURCE=1 option.

	libproc/common/
	* P32ton.c (sigaction_32_to_n, sigaction_n_to_32): Use sa_handler32.
	(siginfo_32_to_n, siginfo_n_to32): Remove the lines of asign to the
	members that don't exist on Linux.
	(prfpregset_32_to_n, prfpregset_n_to_32): Comment the part of amd64.
	* P32ton.h: Fix the inclusions.
	* Pcore.c (core_find_text, core_find_data): Convert the type.
	* Psyscall.c: Include sys/stack.h.
	* makefile: Add compile option -I../../uts/intel/
	(Pcore.o): Add -D_LARGEFILE64_SOURCE=1 option.
	* pr_getitimer.c: Include types_time.h.
	* pr_stat.c: Remove the lines of st_fstype.
	* pr_statvfs.c: Remove the lines of f_basetype and f_fstr.
	
	libport/
	* elf.c: New
	* makefile: Update.

	librtld/
	* rtld.h: Remove _SYSCALL32 conditional.
	* rtld_db.c: Define _rd_reset64.

	uts/common/
	* sys/ctf_api.h: Include sys/procfs.h.
	* sys/procfs.h: Removed.
	* intel/sys/stack.h: New.
	* intel/ia32/sys/stack.h: New.

2010-10-26  Shujing Zhao  <pearly.zhao@oracle.com>
	
	* libdtrace/makefile: Fix dt_isadep.o, dt_module.o.
	* libdtrace/dt_module.c: Include sys/stat.h.

2010-10-25  Paolo Carlini  <paolo.carlini@oracle.com>

	* libdtrace/drti.c (dprintf): Remove.

2010-10-25  Shujing Zhao  <pearly.zhao@oracle.com>

	* libdtrace/dt_grammar.c: Remove generated file.
	* libdtrace/makefile: Fix BUILD_DIR.
	* libport/makefile: Same.
	* libproc/common/makefile: Same.

2010-10-22  Shujing Zhao  <pearly.zhao@oracle.com>

	* cmd/dtrace.c: Remove.
	* uts/common/sys/elftypes.h: Remove.
	* include/sys/int_types.h: Remove int_fast16_t etc.
	* include/sys/regset.h: Remove gregset_t delaration.

2010-10-21  Shujing Zhao  <pearly.zhao@oracle.com>

	* demo/act/time.d: New.
	* makefile: New.
	* libproc/common/makefile: Fix BUILD_DIR.
	* cmd/common/makefile: Same.
	* libctf/makefile: Same.
	* libdtrace/makefile: Same.
	* libport/makefile: Same.
	* librtld/makefile: Same.

2010-10-15  Shujing Zhao  <pearly.zhao@oracle.com>

	* librtld/rtld_db.c: Comment some functions.
	* cmd/common/makefile: New.
	* include/mutex.h: Declare mutex_init.
	* include/procs_service.h: include elf.h.
	* include/rtld_db.h: Update declaration.
	* include/type_posix.h: Define off64_t.
	* libdtrace/dt_cc.c: Define yylineno.
	* libdtrace/dt_lex.l: Define unput.
	* libdtrace/makefile: Fix compile option.
	* libport/proc_name.c: Define fork1.
	* libport/time.c: Define pthread_cond_reltimedwait_np, mutex_init and
	_lwp_kill.
	* libproc/common/makefile: Fix.
	* libproc/common/Pcontrol.c, libproc/common/Pexecname.c,
	libproc/common/Pzone.c: Comment some lines that are not supported by
	Linux.

2010-09-27  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/rtld_db.h, include/types_off.h: Adjust definition.
	* libctf/makefile: Use /usr/bin/gcc.
	* libport/makefile, libport/p_online.c, libport/tasksys.c: New.
	* libproc/common/makefile: Use -D_LARGEFILE64_SOURCE=1 to make the
	off64_t available.
	* libproc/common/Pzone.c: Comment some functions not be compiled.
	* librtld/rd_elf.c: New.
	* librtld/makefile: Add rd_elf.o to LIB.
	* librtld/rtld_db.c (rd_loadobj_iter, rd_event_addr, rd_event_enable,
	rd_event_getmsg): Change.
	(rd_plt_resolution, rd_objpad_enable): Remove.

2010-09-21  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/objfs.h: Move to uts/common/sys/.
	* libdtrace/makefile: Export correct format to dt_errtags.c.
	* libdtrace/dt_impl.h, dt_open.c, dt_parser.c, dt_dof.c: Fixed include
	header files.
	* librtld/makefile: Fix the compile options.
	* include/types_various.h: Add ABS macro and and move OBJFS_ROOT to
	objfs.h.

2010-09-19  Shujing Zhao  <pearly.zhao@oracle.com>

	* driver/dis_tables.h: Include sys/int_types.h.
	* driver/dis_tables.c: Added.
	* libdtrace/mknames.sh: Use awk. 
	* libdtrace/makefile: Include dis_tables.o, dt_errtags.o and
	dt_names.o.

2010-09-17  Shujing Zhao  <pearly.zhao@oracle.com>

	* libport/gmatch.c: Added.
	* librtld/makefile, libctf/makefile: Added.
	* include/types_various.h, include/types_off.h: Update.

2010-09-16  Shujing Zhao  <pearly.zhao@oracle.com>

	* include/mutex.h, libdtrace, libproc, librtld: Fix the mutex
	problems.
	* libport/proc_name.c, libport/strlcat.c: Added.
	* include/port.h, uts/common/sys/mnttab.h, include/sys/bitmap.h,
	include/sys/elftypes.h: Added.

2010-09-13  Shujing Zhao  <pearly.zhao@oracle.com>

	* librtld: Added.
	* libdtrace (dt_lex.l, makefile): Fixed.
	* include/types_various.h: Define ino64_t and PS_OBJ_LDSO.

2010-09-10  Shujing Zhao  <pearly.zhao@oracle.com>

	* libport: Add compat functions support at libport.
	* libdtrace/makefile: Handle the dt_lex.l and add it to the lib.
	* libdtrace/dt_impl.h: Define different yytext at Linux.

2010-09-08  Shujing Zhao  <pearly.zhao@oracle.com>

	* Define __USE_ATFILE before include <fcntl.h> when use AT_*
	constants.
	* Add makefile for libproc and libdtrace.
	* Adjust the header files.

2010-09-07  Shujing Zhao  <pearly.zhao@oracle.com>

	* Adjust the header files at directory include to make the files of
	libproc	can be compiled. Move some modified headers from uts to
	include. Fix the source files at libproc.

2010-08-31  Shujing Zhao  <pearly.zhao@oracle.com>

	* Strip the Solaris header files dependency from the sources files.
	Add the fix includes at the directory include. Fix the compile
	options.
