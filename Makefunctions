# Functions used by the individual Build files.
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2011 Oracle, Inc.  All rights reserved.
# Use is subject to license terms.

current-dir = $(dir $(lastword $(MAKEFILE_LIST)))

# Rules to generate the name of an object file and source file for a given primary.
# Syntax: $(call *-name,primary,filename)

obj-name = $(addprefix $(objdir)/$(subst /,-,$($(1)_DIR))-,$(subst /,-,$(2:.c=.o)))
src-name = $(addprefix $($(1)_DIR),$(2))

# Rule to build a C source file.
# Syntax: $(call cc-template,primary,filename-without-dir)

cc-dependencies = -MP -MMD -MT $(obj-name)

define cc-template
$(obj-name): $(src-name) $(foreach dep,$($(1)_SRCDEPS),$(call src-name,$(1),$(dep)))
	$(CC) $(CPPFLAGS) $($(1)_CPPFLAGS) $(filter-out $($(1)_NOCFLAGS),$(CFLAGS) $($(1)_CFLAGS)) $(cc-dependencies) -c -o $(obj-name) $(src-name)
endef

# Rule to build a library, and all its sources.
# Syntax: $(call lib-template,primary)

define lib-template
$(objdir)/$($(1)_TARGET): $(foreach source,$($(1)_SOURCES),$(call obj-name,$(1),$(source))) \
                          $(foreach dep,$(filter-out %.o,$($(1)_DEPS)),$(addprefix $(objdir)/,$(dep))) \
                          $(foreach dep,$(filter %.o,$($(1)_DEPS)),$(call obj-name,$(1),$(dep)))
	ar r $(objdir)/$($(1)_TARGET) $(foreach source,$($(1)_SOURCES),$(call obj-name,$(1),$(source)))
	$(foreach post,$($(1)_POST),$(call $(post),$(objdir)/$($(1)_TARGET)))

$(foreach file,$(filter-out $($(1)_EXPLICIT),$($(1)_SOURCES)),$(eval $(call cc-template,$(1),$(file))))
endef

# Rule to build a binary, and all its sources.
# Syntax: $(call cmd-template,primary)

define cmd-template
$(objdir)/$($(1)_TARGET): $(foreach source,$($(1)_SOURCES),$(call obj-name,$(1),$(source))) \
                          $(foreach dep,$(filter-out %.o,$($(1)_DEPS)),$(addprefix $(objdir)/,$(dep))) \
                          $(foreach dep,$(filter %.o,$($(1)_DEPS)),$(call obj-name,$(1),$(dep)))
	$(CC) $(filter-out $($(1)_NOCFLAGS),$(CFLAGS) $($(1)_CFLAGS)) $(LDFLAGS) -o $(objdir)/$($(1)_TARGET) \
	      $(foreach source,$($(1)_SOURCES),$(call obj-name,$(1),$(source))) \
	      $($(1)_LIBS)
	$(foreach post,$($(1)_POST),$(call $(post),$(objdir)/$($(1)_TARGET)))

$(foreach file,$(filter-out $($(1)_EXPLICIT),$($(1)_SOURCES)),$(eval $(call cc-template,$(1),$(file))))
endef
