# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License, Version 1.0 only
# (the "License").  You may not use this file except in compliance
# with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2011 Oracle, Inc.  All rights reserved.
# Use is subject to license terms.

LIBS += libdtrace
libdtrace_CPPFLAGS = -Ilibdtrace -Ilibproc -Ilibctf -Iuts/intel -Ilibdtrace/i386 -D_LONGLONG_TYPE \
                     -DDTRACE_LIBDIR="\"$(LIBDIR)/dtrace\""
libdtrace_TARGET = libdtrace.a
libdtrace_DIR := $(current-dir)
libdtrace_SRCDEPS = dt_grammar.h
libdtrace_SOURCES = dt_lex.c dt_aggregate.c dt_as.c dt_buf.c dt_cc.c dt_cg.c \
                    i386/dis_tables.c i386/dt_isadep.c dt_consume.c dt_decl.c dt_dis.c \
                    dt_dof.c dt_error.c dt_errtags.c dt_grammar.c dt_handle.c \
                    dt_ident.c dt_inttab.c dt_link.c dt_list.c dt_map.c \
                    dt_module.c dt_names.c dt_open.c dt_options.c dt_parser.c \
                    dt_pcb.c dt_pid.c dt_pragma.c dt_printf.c dt_proc.c \
                    dt_program.c dt_provider.c dt_regset.c dt_string.c \
                    dt_strtab.c dt_subr.c dt_work.c dt_xlator.c

$(libdtrace_DIR)dt_errtags.c: $(libdtrace_DIR)dt_errtags.h $(libdtrace_DIR)/mkerrtags.sh
	sh $(libdtrace_DIR)mkerrtags.sh < $(libdtrace_DIR)dt_errtags.h | sed -e 's/\\n/\n/g' > $(libdtrace_DIR)dt_errtags.c

$(libdtrace_DIR)dt_names.c: uts/common/sys/dtrace.h $(libdtrace_DIR)/mknames.sh
	sh $(libdtrace_DIR)mknames.sh < uts/common/sys/dtrace.h | sed -e 's/\\n/\n/g' > $(libdtrace_DIR)dt_names.c

$(libdtrace_DIR)dt_grammar.h $(libdtrace_DIR)dt_grammar.c: $(libdtrace_DIR)dt_grammar.y
	$(YACC) -o $(libdtrace_DIR)dt_grammar.c -d $(libdtrace_DIR)dt_grammar.y

$(libdtrace_DIR)dt_lex.c: $(libdtrace_DIR)dt_grammar.h $(libdtrace_DIR)dt_lex.l
	flex -v -o$(libdtrace_DIR)dt_lex.c $(libdtrace_DIR)dt_lex.l

SED_DLIBS += \
	procfs.d \
	io.d \
	ip.d \
	net.d \
	sysevent.d \
	tcp.d \
	udp.d

BUILD_DLIBS += \
	$(SED_DLIBS) \
	errno.d \
	signal.d \
	regs.d

DLIBSRCS += \
        errno.d \
        net.d \
        fc.d \
        ip.d \
        iscsit.d \
        nfs.d \
        procfs.d \
        regs.d \
        sched.d \
        signal.d \
        scsi.d \
        srp.d \
        sysevent.d \
        tcp.d \
        udp.d \
        unistd.d

WORKING_DLIBS = errno.d \
                regs.d \
                signal.d \
                unistd.d

# Normal substitutions.

$(libdtrace_DIR)%.sed: $(libdtrace_DIR)%.sed.in
	$(PREPROCESS) -x c -D_KERNEL $< | tr -d ' ' | tr '"' '@' | \
            sed 's/\&/\\\&/g' | grep '^s/' > $@

$(foreach dlib,$(SED_DLIBS),$(call src-name,libdtrace,$(dlib))): %.d: %.sed %.d.in
	sed -f $*.sed < $*.d.in > $@

PHONIES += dlibs working-dlibs
TARGETS += dlibs working-dlibs
dlibs: $(call src-name,libdtrace,$(DLIBSRCS))

working-dlibs: $(addprefix $(objdir)/dlibs/,$(WORKING_DLIBS))

$(objdir)/dlibs/.dir.stamp:
	mkdir -p $(objdir)/dlibs
	@touch $(objdir)/dlibs/.dir.stamp
	ln -s ../../$(libdtrace_DIR)/drti-vers $(objdir)/dlibs

$(addprefix $(objdir)/dlibs/,$(WORKING_DLIBS)):: $(objdir)/dlibs/.dir.stamp

$(addprefix $(objdir)/dlibs/,$(WORKING_DLIBS)):: $(objdir)/dlibs/%: $(libdtrace_DIR)%
	cp -f $^ $@

PHONIES += objs
TARGETS += objs
BUILD_DRTI_OBJ = $(objdir)/drti.o
DRTI_OBJ = $(objdir)/dlibs/drti.o

objs: $(DRTI_OBJ)
$(BUILD_DRTI_OBJ): $(libdtrace_DIR)drti.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(libdtrace_CPPFLAGS) -MP -MMD -c -o $@ $^
$(DRTI_OBJ): $(BUILD_DRTI_OBJ) $(objdir)/dlibs/.dir.stamp
	ln -s ../../$(BUILD_DRTI_OBJ) $(DRTI_OBJ)

# Custom substitutions.

$(libdtrace_DIR)errno.d: /usr/include/asm-generic/errno-base.h
	$(libdtrace_DIR)mkerrno.sh < /usr/include/asm-generic/errno-base.h \
	| sed -e 's/\\n/\n/g' > $@

$(libdtrace_DIR)signal.d: /usr/include/bits/signum.h
	$(libdtrace_DIR)mksignal.sh < /usr/include/bits/signum.h \
	| sed -e 's/\\n/\n/g' \
	| sed -e '/inline int SIGCLD/{h;d}' -e '/"1.0" SIGCHLD/{G;}' \
	| sed -e '/"1.0" SIGCLD/{h;d}' -e '/ = SIGCHLD;/{G;}' \
	| sed -e '/inline int SIGPOLL/{h;d}' -e '/"1.0" SIGIO/{G;}' \
	| sed -e '/"1.0" SIGPOLL/{h;d}' -e '/ = SIGIO/{G;}' \
	| sed -e '/SIGRTMIN/d' -e '/SIGRTMAX/d' > $@

$(libdtrace_DIR)regs.d: $(libdtrace_DIR)i386/regs.sed.in $(libdtrace_DIR)i386/regs.d.in
	$(PREPROCESS) -x c -Iinclude -D_KERNEL $(libdtrace_DIR)i386/regs.sed.in | \
            tr -d ' ' | tr '"' '@' | sed 's/\&/\\\&/g' | grep '^s/' > $(libdtrace_DIR)i386/regs.sed
	sed -f $(libdtrace_DIR)i386/regs.sed < $(libdtrace_DIR)i386/regs.d.in > $@
	-rm $(libdtrace_DIR)i386/regs.sed

clean::
	rm -f $(libdtrace_DIR)dt_errtags.c $(libdtrace_DIR)dt_names.c
	rm -f $(libdtrace_DIR)dt_grammar.h $(libdtrace_DIR)dt_grammar.c
	rm -f $(libdtrace_DIR)dt_lex.c
	rm -f $(addprefix $(libdtrace_DIR),$(BUILD_DLIBS))

install::
	mkdir -p $(LIBDIR)/dtrace
	install -m 644 -o root -g root $(DRTI_OBJ) $(LIBDIR)/dtrace
	cd $(objdir)/dlibs && install -m 644 -o root -g root $(WORKING_DLIBS) \
		drti-vers $(LIBDIR)/dtrace
